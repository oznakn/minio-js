{"version":3,"sources":["minio.js"],"names":["Package","require","Client","params","secure","Error","useSSL","port","endPoint","errors","InvalidEndpointError","InvalidArgumentError","region","host","toLowerCase","protocol","transport","Http","Https","libraryComments","process","platform","arch","libraryAgent","version","signingHost","accessKey","secretKey","sessionToken","userAgent","pathStyle","undefined","anonymous","regionMap","partSize","overRidePartSize","maximumPartSize","maxObjectSize","enableSHA256","s3AccelerateEndpoint","reqOptions","bucketName","objectName","_","isEmpty","indexOf","options","TypeError","pick","opts","method","headers","query","virtualHostStyle","path","accelerateEndPoint","getAccelerateEndPointIfSet","map","v","k","Object","assign","appName","appVersion","trim","size","response","err","logStream","logHeaders","forEach","redacter","RegExp","replace","write","statusCode","errJSON","JSON","stringify","stream","stdout","payload","statusCodes","returnResponse","cb","length","sha256sum","makeRequestStream","_makeRequest","e","getRequestOptions","date","Date","authorization","req","request","includes","errorTransformer","transformers","getErrorTransformer","on","logHTTP","pipe","getBucketRegion","InvalidBucketNameError","extractRegion","transformer","getBucketRegionTransformer","data","window","makeRequest","name","Region","makeOpts","createBucketConfiguration","push","_attr","xmlns","LocationConstraint","payloadObject","CreateBucketConfiguration","ObjectLocking","getListBucketTransformer","buckets","result","bucket","prefix","recursive","InvalidPrefixError","delimiter","keyMarker","uploadIdMarker","uploads","ended","readStream","Stream","Readable","objectMode","_read","shift","listIncompleteUploadsQuery","emit","prefixes","async","eachSeries","upload","listParts","key","uploadId","parts","reduce","acc","item","isTruncated","nextKeyMarker","nextUploadIdMarker","code","isValidBucketNameError","InvalidObjectNameError","removeUploadId","during","findUploadId","filePath","getOpts","partFile","partFileStream","objStat","rename","fs","waterfall","statObject","dirname","ignore","etag","stat","stats","offset","createWriteStream","flags","getPartialObject","downloadStream","range","expectedStatusCodes","querystring","metaData","callback","multipart","uploader","getUploader","hash","getHashSummer","start","end","autoClose","createReadStream","md5sum","objInfo","etags","initiateNewMultipartUpload","calculatePartSize","part","partsDone","partNumber","uploadedSize","whilst","md5sumHex","Buffer","from","toString","completeMultipartUpload","rest","chunker","BlockStream2","zeroPadding","ObjectUploader","arg1","arg2","arg3","arg4","arg5","srcObject","conditions","CopyConditions","modified","unmodified","matchETag","matchEtagExcept","matchETagExcept","getCopyObjectTransformer","sourceConfig","destConfig","CopySourceOptions","CopyDestinationOptions","validate","getHeaders","Bucket","resHeaders","copyObjResponse","Key","LastModified","MetaData","VersionId","SourceVersionId","Etag","Size","allArgs","copyObjectV2","arguments","copyObjectV1","marker","listQueryOpts","Delimiter","MaxKeys","IncludeVersion","queries","sort","join","getListObjectsTransformer","listOpts","objects","listObjectsQuery","nextMarker","versionIdMarker","continuationToken","maxKeys","startAfter","getListObjectsV2Transformer","listObjectsV2Query","nextContinuationToken","statOpts","lastModified","versionId","removeOpts","queryParams","governanceBypass","requestOptions","objectsList","maxEntries","entry","list","listOfList","encoder","TextEncoder","value","deleteObjects","builder","xml2js","Builder","headless","buildObject","encode","policy","getConcater","InvalidBucketPolicyError","expires","reqParams","requestDate","AnonymousRequestError","url","pe","respHeaders","validRespHeaders","header","presignedUrl","PostPolicy","postPolicy","formData","dateStr","expiration","setSeconds","setExpires","policyBase64","signature","portStr","urlStr","postURL","getInitiateMultipartTransformer","element","Part","PartNumber","ETag","CompleteMultipartUpload","getCompleteMultipartTransformer","errCode","S3Error","errMessage","completeMultipartResult","listNext","listPartsQuery","concat","getListPartsTransformer","maxUploads","unshift","getListMultipartTransformer","latestUpload","initiated","getTime","simpleUploader","args","multipartUploader","config","rootName","renderOpts","setBucketNotification","NotificationConfig","getBucketNotificationTransformer","bucketNotification","suffix","events","listener","NotificationPoller","versionConfig","bucketVersioningTransformer","keys","taggingParams","tags","putOpts","tagsList","entries","Value","taggingConfig","Tagging","TagSet","Tag","setTagging","removeTagging","getTagsTransformer","policyConfig","lifeCycleConfig","removeBucketLifecycle","applyBucketLifecycle","lifecycleTransformer","lifecycleConfig","lockConfigOpts","retentionModes","RETENTION_MODES","COMPLIANCE","GOVERNANCE","validUnits","RETENTION_VALIDITY_UNITS","DAYS","YEARS","mode","unit","validity","ObjectLockEnabled","configKeys","difference","Rule","DefaultRetention","Mode","Days","Years","objectLockConfig","objectLockTransformer","retentionOpts","retainUntilDate","RetainUntilDate","retentionConfig","objectRetentionTransformer","encryptionConfig","encryptionObj","ApplyServerSideEncryptionByDefault","SSEAlgorithm","bucketEncConfig","bucketEncryptionTransformer","replicationConfig","role","rules","replicationParamsConfig","ReplicationConfiguration","Role","replicationConfigTransformer","legalHoldConfig","objectLegalHoldTransformer","setOpts","defaultOpts","status","LEGAL_HOLD_STATUS","ENABLED","DISABLED","Status","partConfig","uploadID","partCopyResult","uploadPartTransformer","uploadPartCopyRes","destObjConfig","sourceObjList","me","sourceFilesLength","PART_CONSTRAINTS","MAX_PARTS_COUNT","i","getStatOptions","srcConfig","VersionID","srcObjectSizes","totalSize","totalParts","sourceObjStats","srcItem","Promise","all","then","srcObjectInfos","validatedStats","resItemStat","index","srcCopySize","MatchRange","srcStart","Start","srcEnd","End","ABS_MIN_PART_SIZE","MAX_MULTIPART_PUT_OBJECT_SIZE","MAX_PART_SIZE","copyObject","MatchETag","splitPartSizeList","idx","calSize","getUploadPartConfigList","uploadPartConfigList","splitSize","splitIndex","startIdx","startIndex","endIdx","endIndex","objConfig","partIndex","totalUploads","Array","splitStart","upldCtrIdx","splitEnd","sourceObj","uploadPartConfig","performUploadParts","uploadList","uploadPartCopy","bind","res","abortMultipartUpload","partCopy","newUploadHeaders","catch","error","clientExtensions","extensions","prototype","makeBucket","listBuckets","bucketExists","removeBucket","getObject","fGetObject","putObject","fPutObject","removeObject","removeObjects","presignedGetObject","presignedPutObject","presignedPostPolicy","getBucketNotification","removeAllBucketNotification","getBucketPolicy","setBucketPolicy","removeIncompleteUpload","getBucketVersioning","setBucketVersioning","setBucketTagging","removeBucketTagging","getBucketTagging","setObjectTagging","removeObjectTagging","getObjectTagging","setBucketLifecycle","getBucketLifecycle","setObjectLockConfig","getObjectLockConfig","putObjectRetention","getObjectRetention","setBucketEncryption","getBucketEncryption","removeBucketEncryption","setBucketReplication","getBucketReplication","removeBucketReplication","setObjectLegalHold","getObjectLegalHold","composeObject","toUTCString","InvalidDateError","toISOString","type","min","max"],"mappings":"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","sourcesContent":["/*\n * MinIO Javascript Library for Amazon S3 Compatible Cloud Storage, (C) 2015 MinIO, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fs from 'fs'\nimport Http from 'http'\nimport Https from 'https'\nimport Stream from 'stream'\nimport BlockStream2 from 'block-stream2'\nimport Xml from 'xml'\nimport xml2js from 'xml2js'\nimport async from 'async'\nimport querystring from 'querystring'\nimport mkdirp from 'mkdirp'\nimport path from 'path'\nimport _ from 'lodash'\nimport { TextEncoder } from \"web-encoding\"\n\nimport {\n  extractMetadata, prependXAMZMeta, isValidPrefix, isValidEndpoint, isValidBucketName,\n  isValidPort, isValidObjectName, isAmazonEndpoint, getScope,\n  uriEscape, uriResourceEscape, isBoolean, isFunction, isNumber,\n  isString, isObject, isArray, isValidDate, pipesetup,\n  readableStream, isReadableStream, isVirtualHostStyle,\n  insertContentType, makeDateLong, promisify, getVersionId, sanitizeETag,\n  toMd5, toSha256,\n  RETENTION_MODES, RETENTION_VALIDITY_UNITS,\n  LEGAL_HOLD_STATUS, CopySourceOptions, CopyDestinationOptions, getSourceVersionId,\n  PART_CONSTRAINTS,\n  partsRequired,\n  calculateEvenSplits\n} from './helpers.js'\n\nimport { signV4, presignSignatureV4, postPresignSignatureV4 } from './signing.js'\n\nimport ObjectUploader from './object-uploader'\n\nimport * as transformers from './transformers'\n\nimport * as errors from './errors.js'\n\nimport { getS3Endpoint } from './s3-endpoints.js'\n\nimport { NotificationConfig, NotificationPoller } from './notification'\n\nimport extensions from './extensions'\n\nvar Package = require('../../package.json')\n\nexport class Client {\n  constructor(params) {\n    if (typeof params.secure !== 'undefined') throw new Error('\"secure\" option deprecated, \"useSSL\" should be used instead')\n    // Default values if not specified.\n    if (typeof params.useSSL === 'undefined') params.useSSL = true\n    if (!params.port) params.port = 0\n    // Validate input params.\n    if (!isValidEndpoint(params.endPoint)) {\n      throw new errors.InvalidEndpointError(`Invalid endPoint : ${params.endPoint}`)\n    }\n    if (!isValidPort(params.port)) {\n      throw new errors.InvalidArgumentError(`Invalid port : ${params.port}`)\n    }\n    if (!isBoolean(params.useSSL)) {\n      throw new errors.InvalidArgumentError(`Invalid useSSL flag type : ${params.useSSL}, expected to be of type \"boolean\"`)\n    }\n\n    // Validate region only if its set.\n    if (params.region) {\n      if (!isString(params.region)) {\n        throw new errors.InvalidArgumentError(`Invalid region : ${params.region}`)\n      }\n    }\n\n    var host = params.endPoint.toLowerCase()\n    var port = params.port\n    var protocol = ''\n    var transport\n    // Validate if configuration is not using SSL\n    // for constructing relevant endpoints.\n    if (params.useSSL === false) {\n      transport = Http\n      protocol = 'http:'\n      if (port === 0) {\n        port = 80\n      }\n    } else {\n      // Defaults to secure.\n      transport = Https\n      protocol = 'https:'\n      if (port === 0) {\n        port = 443\n      }\n    }\n\n    // if custom transport is set, use it.\n    if (params.transport) {\n      if (!isObject(params.transport)) {\n        throw new errors.InvalidArgumentError('Invalid transport type : ${params.transport}, expected to be type \"object\"')\n      }\n      transport = params.transport\n    }\n\n    // User Agent should always following the below style.\n    // Please open an issue to discuss any new changes here.\n    //\n    //       MinIO (OS; ARCH) LIB/VER APP/VER\n    //\n    var libraryComments = `(${process.platform}; ${process.arch})`\n    var libraryAgent = `MinIO ${libraryComments} minio-js/${Package.version}`\n    // User agent block ends.\n\n    var signingHost\n    if (params.signingHost) {\n      signingHost = params.signingHost\n    }\n\n    this.transport = transport\n    this.host = host\n    this.port = port\n    this.protocol = protocol\n    this.accessKey = params.accessKey\n    this.secretKey = params.secretKey\n    this.sessionToken = params.sessionToken\n    this.userAgent = `${libraryAgent}`\n    this.signingHost = signingHost\n\n    // Default path style is true\n    if (params.pathStyle === undefined) {\n      this.pathStyle = true\n    } else {\n      this.pathStyle = params.pathStyle\n    }\n\n    if (!this.accessKey) this.accessKey = ''\n    if (!this.secretKey) this.secretKey = ''\n    this.anonymous = !this.accessKey || !this.secretKey\n\n    this.regionMap = {}\n    if (params.region) {\n      this.region = params.region\n    }\n\n    this.partSize = 64*1024*1024\n    if (params.partSize) {\n      this.partSize = params.partSize\n      this.overRidePartSize = true\n    }\n    if (this.partSize < 5*1024*1024) {\n      throw new errors.InvalidArgumentError(`Part size should be greater than 5MB`)\n    }\n    if (this.partSize > 5*1024*1024*1024) {\n      throw new errors.InvalidArgumentError(`Part size should be less than 5GB`)\n    }\n\n    this.maximumPartSize = 5*1024*1024*1024\n    this.maxObjectSize = 5*1024*1024*1024*1024\n    // SHA256 is enabled only for authenticated http requests. If the request is authenticated\n    // and the connection is https we use x-amz-content-sha256=UNSIGNED-PAYLOAD\n    // header for signature calculation.\n    this.enableSHA256 = !this.anonymous && !params.useSSL\n\n    this.s3AccelerateEndpoint = ( params.s3AccelerateEndpoint || null )\n    this.reqOptions = {}\n  }\n\n  // This is s3 Specific and does not hold validity in any other Object storage.\n  getAccelerateEndPointIfSet(bucketName, objectName){\n    if (!_.isEmpty(this.s3AccelerateEndpoint)  && !_.isEmpty(bucketName)  && !_.isEmpty(objectName) ) {\n      // http://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html\n      // Disable transfer acceleration for non-compliant bucket names.\n      if (bucketName.indexOf(\".\")!== -1) {\n        throw new Error(`Transfer Acceleration is not supported for non compliant bucket:${bucketName}`)\n      }\n      // If transfer acceleration is requested set new host.\n      // For more details about enabling transfer acceleration read here.\n      // http://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html\n      return this.s3AccelerateEndpoint\n    }\n    return  false\n  }\n\n  /**\n   * @param endPoint _string_ valid S3 acceleration end point\n   */\n  setS3TransferAccelerate(endPoint){\n    this.s3AccelerateEndpoint = endPoint\n  }\n\n  // Sets the supported request options.\n  setRequestOptions(options) {\n    if (!isObject(options)) {\n      throw new TypeError('request options should be of type \"object\"')\n    }\n    this.reqOptions = _.pick(options, ['agent', 'ca', 'cert', 'ciphers', 'clientCertEngine', 'crl', 'dhparam', 'ecdhCurve', 'family', 'honorCipherOrder', 'key', 'passphrase', 'pfx', 'rejectUnauthorized', 'secureOptions', 'secureProtocol', 'servername', 'sessionIdContext'])\n  }\n\n  // returns *options* object that can be used with http.request()\n  // Takes care of constructing virtual-host-style or path-style hostname\n  getRequestOptions(opts) {\n    var method = opts.method\n    var region = opts.region\n    var bucketName = opts.bucketName\n    var objectName = opts.objectName\n    var headers = opts.headers\n    var query = opts.query\n\n    var reqOptions = {method}\n    reqOptions.headers = {}\n\n    // Verify if virtual host supported.\n    var virtualHostStyle\n    if (bucketName) {\n      virtualHostStyle = isVirtualHostStyle(this.host, this.protocol, bucketName, this.pathStyle)\n    }\n\n    if (this.signingHost) {\n      virtualHostStyle = true\n    }\n\n    if (this.port) reqOptions.port = this.port\n    reqOptions.protocol = this.protocol\n\n    if (objectName) {\n      objectName = `${uriResourceEscape(objectName)}`\n    }\n\n    reqOptions.path = '/'\n\n    // Save host.\n    reqOptions.host = this.host\n    // For Amazon S3 endpoint, get endpoint based on region.\n    if (isAmazonEndpoint(reqOptions.host)) {\n      const accelerateEndPoint = this.getAccelerateEndPointIfSet(bucketName, objectName)\n      if (accelerateEndPoint ) {\n        reqOptions.host = `${accelerateEndPoint}`\n      }else {\n        reqOptions.host = getS3Endpoint(region)\n      }\n    }\n\n    if (virtualHostStyle && !opts.pathStyle) {\n      // For all hosts which support virtual host style, `bucketName`\n      // is part of the hostname in the following format:\n      //\n      //  var host = 'bucketName.example.com'\n      //\n      if (bucketName) reqOptions.host = `${bucketName}.${reqOptions.host}`\n      if (objectName) reqOptions.path = `/${objectName}`\n    } else {\n      // For all S3 compatible storage services we will fallback to\n      // path style requests, where `bucketName` is part of the URI\n      // path.\n      if (bucketName) reqOptions.path = `/${bucketName}`\n      if (objectName) reqOptions.path = `/${bucketName}/${objectName}`\n    }\n\n    if (query) reqOptions.path += `?${query}`\n    reqOptions.headers.host = reqOptions.host\n    if ((reqOptions.protocol === 'http:' && reqOptions.port !== 80) ||\n        (reqOptions.protocol === 'https:' && reqOptions.port !== 443)) {\n      reqOptions.headers.host = `${reqOptions.host}:${reqOptions.port}`\n    }\n    reqOptions.headers['user-agent'] = this.userAgent\n    if (headers) {\n      // have all header keys in lower case - to make signing easy\n      _.map(headers, (v, k) => reqOptions.headers[k.toLowerCase()] = v)\n    }\n\n    // Use any request option specified in minioClient.setRequestOptions()\n    reqOptions = Object.assign({}, this.reqOptions, reqOptions)\n\n    return reqOptions\n  }\n\n  // Set application specific information.\n  //\n  // Generates User-Agent in the following style.\n  //\n  //       MinIO (OS; ARCH) LIB/VER APP/VER\n  //\n  // __Arguments__\n  // * `appName` _string_ - Application name.\n  // * `appVersion` _string_ - Application version.\n  setAppInfo(appName, appVersion) {\n    if (!isString(appName)) {\n      throw new TypeError(`Invalid appName: ${appName}`)\n    }\n    if (appName.trim() === '') {\n      throw new errors.InvalidArgumentError('Input appName cannot be empty.')\n    }\n    if (!isString(appVersion)) {\n      throw new TypeError(`Invalid appVersion: ${appVersion}`)\n    }\n    if (appVersion.trim() === '') {\n      throw new errors.InvalidArgumentError('Input appVersion cannot be empty.')\n    }\n    this.userAgent = `${this.userAgent} ${appName}/${appVersion}`\n  }\n\n  // Calculate part size given the object size. Part size will be atleast this.partSize\n  calculatePartSize(size) {\n    if (!isNumber(size)) {\n      throw new TypeError('size should be of type \"number\"')\n    }\n    if (size > this.maxObjectSize) {\n      throw new TypeError(`size should not be more than ${this.maxObjectSize}`)\n    }\n    if (this.overRidePartSize) {\n      return this.partSize\n    }\n    var partSize = this.partSize\n    for (;;) { \t\t\t// while(true) {...} throws linting error.\n      // If partSize is big enough to accomodate the object size, then use it.\n      if ((partSize * 10000) > size) {\n        return partSize\n      }\n      // Try part sizes as 64MB, 80MB, 96MB etc.\n      partSize += 16*1024*1024\n    }\n  }\n\n  // log the request, response, error\n  logHTTP(reqOptions, response, err) {\n    // if no logstreamer available return.\n    if (!this.logStream) return\n    if (!isObject(reqOptions)) {\n      throw new TypeError('reqOptions should be of type \"object\"')\n    }\n    if (response && !isReadableStream(response)) {\n      throw new TypeError('response should be of type \"Stream\"')\n    }\n    if (err && !(err instanceof Error)) {\n      throw new TypeError('err should be of type \"Error\"')\n    }\n    var logHeaders = (headers) => {\n      _.forEach(headers, (v, k) => {\n        if (k == 'authorization') {\n          var redacter = new RegExp('Signature=([0-9a-f]+)')\n          v = v.replace(redacter, 'Signature=**REDACTED**')\n        }\n        this.logStream.write(`${k}: ${v}\\n`)\n      })\n      this.logStream.write('\\n')\n    }\n    this.logStream.write(`REQUEST: ${reqOptions.method} ${reqOptions.path}\\n`)\n    logHeaders(reqOptions.headers)\n    if (response) {\n      this.logStream.write(`RESPONSE: ${response.statusCode}\\n`)\n      logHeaders(response.headers)\n    }\n    if (err) {\n      this.logStream.write('ERROR BODY:\\n')\n      var errJSON = JSON.stringify(err, null, '\\t')\n      this.logStream.write(`${errJSON}\\n`)\n    }\n  }\n\n  // Enable tracing\n  traceOn(stream) {\n    if (!stream) stream = process.stdout\n    this.logStream = stream\n  }\n\n  // Disable tracing\n  traceOff() {\n    this.logStream = null\n  }\n\n  // makeRequest is the primitive used by the apis for making S3 requests.\n  // payload can be empty string in case of no payload.\n  // statusCode is the expected statusCode. If response.statusCode does not match\n  // we parse the XML error and call the callback with the error message.\n  // A valid region is passed by the calls - listBuckets, makeBucket and\n  // getBucketRegion.\n  makeRequest(options, payload, statusCodes, region, returnResponse, cb) {\n    if (!isObject(options)) {\n      throw new TypeError('options should be of type \"object\"')\n    }\n    if (!isString(payload) && !isObject(payload)) {\n      // Buffer is of type 'object'\n      throw new TypeError('payload should be of type \"string\" or \"Buffer\"')\n    }\n    statusCodes.forEach(statusCode => {\n      if (!isNumber(statusCode)) {\n        throw new TypeError('statusCode should be of type \"number\"')\n      }\n    })\n    if (!isString(region)) {\n      throw new TypeError('region should be of type \"string\"')\n    }\n    if (!isBoolean(returnResponse)) {\n      throw new TypeError('returnResponse should be of type \"boolean\"')\n    }\n    if(!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    if (!options.headers) options.headers = {}\n    if (options.method === 'POST' || options.method === 'PUT' || options.method === 'DELETE') {\n      options.headers['content-length'] = payload.length\n    }\n    var sha256sum = ''\n    if (this.enableSHA256) sha256sum = toSha256(payload)\n    var stream = readableStream(payload)\n    this.makeRequestStream(options, stream, sha256sum, statusCodes, region, returnResponse, cb)\n  }\n\n  // makeRequestStream will be used directly instead of makeRequest in case the payload\n  // is available as a stream. for ex. putObject\n  makeRequestStream(options, stream, sha256sum, statusCodes, region, returnResponse, cb) {\n    if (!isObject(options)) {\n      throw new TypeError('options should be of type \"object\"')\n    }\n    if (!isReadableStream(stream)) {\n      throw new errors.InvalidArgumentError('stream should be a readable Stream')\n    }\n    if (!isString(sha256sum)) {\n      throw new TypeError('sha256sum should be of type \"string\"')\n    }\n    statusCodes.forEach(statusCode => {\n      if (!isNumber(statusCode)) {\n        throw new TypeError('statusCode should be of type \"number\"')\n      }\n    })\n    if (!isString(region)) {\n      throw new TypeError('region should be of type \"string\"')\n    }\n    if (!isBoolean(returnResponse)) {\n      throw new TypeError('returnResponse should be of type \"boolean\"')\n    }\n    if(!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    // sha256sum will be empty for anonymous or https requests\n    if (!this.enableSHA256 && sha256sum.length !== 0) {\n      throw new errors.InvalidArgumentError(`sha256sum expected to be empty for anonymous or https requests`)\n    }\n    // sha256sum should be valid for non-anonymous http requests.\n    if (this.enableSHA256 && sha256sum.length !== 64) {\n      throw new errors.InvalidArgumentError(`Invalid sha256sum : ${sha256sum}`)\n    }\n\n    var _makeRequest = (e, region) => {\n      if (e) return cb(e)\n      options.region = region\n      var reqOptions = this.getRequestOptions(options)\n      if (!this.anonymous) {\n        // For non-anonymous https requests sha256sum is 'UNSIGNED-PAYLOAD' for signature calculation.\n        if (!this.enableSHA256) sha256sum = 'UNSIGNED-PAYLOAD'\n\n        let date = new Date()\n\n        reqOptions.headers['x-amz-date'] = makeDateLong(date)\n        reqOptions.headers['x-amz-content-sha256'] = sha256sum\n        if (this.sessionToken) {\n          reqOptions.headers['x-amz-security-token'] = this.sessionToken\n        }\n\n        var authorization = signV4(reqOptions, this.accessKey, this.secretKey, region, date, this.signingHost)\n        reqOptions.headers.authorization = authorization\n      }\n      var req = this.transport.request(reqOptions, response => {\n        if (!statusCodes.includes(response.statusCode)) {\n          // For an incorrect region, S3 server always sends back 400.\n          // But we will do cache invalidation for all errors so that,\n          // in future, if AWS S3 decides to send a different status code or\n          // XML error code we will still work fine.\n          delete(this.regionMap[options.bucketName])\n          var errorTransformer = transformers.getErrorTransformer(response)\n          pipesetup(response, errorTransformer)\n            .on('error', e => {\n              this.logHTTP(reqOptions, response, e)\n              cb(e)\n            })\n          return\n        }\n        this.logHTTP(reqOptions, response)\n        if (returnResponse) return cb(null, response)\n        // We drain the socket so that the connection gets closed. Note that this\n        // is not expensive as the socket will not have any data.\n        response.on('data', ()=>{})\n        cb(null)\n      })\n      let pipe = pipesetup(stream, req)\n      pipe.on('error', e => {\n        this.logHTTP(reqOptions, null, e)\n        cb(e)\n      })\n    }\n    if (region) return _makeRequest(null, region)\n    this.getBucketRegion(options.bucketName, _makeRequest)\n  }\n\n  // gets the region of the bucket\n  getBucketRegion(bucketName, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError(`Invalid bucket name : ${bucketName}`)\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('cb should be of type \"function\"')\n    }\n\n    // Region is set with constructor, return the region right here.\n    if (this.region) return cb(null, this.region)\n\n    if (this.regionMap[bucketName]) return cb(null, this.regionMap[bucketName])\n    var extractRegion = (response) => {\n      var transformer = transformers.getBucketRegionTransformer()\n      var region = 'us-east-1'\n      pipesetup(response, transformer)\n        .on('error', cb)\n        .on('data', data => {\n          if (data) region = data\n        })\n        .on('end', () => {\n          this.regionMap[bucketName] = region\n          cb(null, region)\n        })\n    }\n\n    var method = 'GET'\n    var query = 'location'\n\n    // `getBucketLocation` behaves differently in following ways for\n    // different environments.\n    //\n    // - For nodejs env we default to path style requests.\n    // - For browser env path style requests on buckets yields CORS\n    //   error. To circumvent this problem we make a virtual host\n    //   style request signed with 'us-east-1'. This request fails\n    //   with an error 'AuthorizationHeaderMalformed', additionally\n    //   the error XML also provides Region of the bucket. To validate\n    //   this region is proper we retry the same request with the newly\n    //   obtained region.\n    var pathStyle = this.pathStyle && typeof window === 'undefined'\n\n    this.makeRequest({method, bucketName, query, pathStyle}, '', [200], 'us-east-1', true, (e, response) => {\n      if (e) {\n        if (e.name === 'AuthorizationHeaderMalformed') {\n          var region = e.Region\n          if (!region) return cb(e)\n          this.makeRequest({method, bucketName, query}, '', [200], region, true, (e, response) => {\n            if (e) return cb(e)\n            extractRegion(response)\n          })\n          return\n        }\n        return cb(e)\n      }\n      extractRegion(response)\n    })\n  }\n\n  // Creates the bucket `bucketName`.\n  //\n  // __Arguments__\n  // * `bucketName` _string_ - Name of the bucket\n  // * `region` _string_ - region valid values are _us-west-1_, _us-west-2_,  _eu-west-1_, _eu-central-1_, _ap-southeast-1_, _ap-northeast-1_, _ap-southeast-2_, _sa-east-1_.\n  // * `makeOpts` _object_ - Options to create a bucket. e.g {ObjectLocking:true} (Optional)\n  // * `callback(err)` _function_ - callback function with `err` as the error argument. `err` is null if the bucket is successfully created.\n  makeBucket(bucketName, region, makeOpts={}, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n\n    // Backward Compatibility\n    if(isObject(region)){\n      cb= makeOpts\n      makeOpts=region\n      region = ''\n    }\n    if (isFunction(region)) {\n      cb = region\n      region = ''\n      makeOpts={}\n    }\n    if(isFunction(makeOpts)){\n      cb=makeOpts\n      makeOpts={}\n    }\n\n    if (!isString(region)) {\n      throw new TypeError('region should be of type \"string\"')\n    }\n    if (!isObject(makeOpts)) {\n      throw new TypeError('makeOpts should be of type \"object\"')\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    var payload = ''\n\n    // Region already set in constructor, validate if\n    // caller requested bucket location is same.\n    if (region && this.region) {\n      if (region !== this.region) {\n        throw new errors.InvalidArgumentError(`Configured region ${this.region}, requested ${region}`)\n      }\n    }\n\n    // sending makeBucket request with XML containing 'us-east-1' fails. For\n    // default region server expects the request without body\n    if (region && region !== 'us-east-1') {\n      var createBucketConfiguration = []\n      createBucketConfiguration.push({\n        _attr: {\n          xmlns: 'http://s3.amazonaws.com/doc/2006-03-01/'\n        }\n      })\n      createBucketConfiguration.push({\n        LocationConstraint: region\n      })\n      var payloadObject = {\n        CreateBucketConfiguration: createBucketConfiguration\n      }\n      payload = Xml(payloadObject)\n    }\n    var method = 'PUT'\n    var headers = {}\n\n    if(makeOpts.ObjectLocking){\n      headers[\"x-amz-bucket-object-lock-enabled\"]=true\n    }\n\n    if (!region) region = 'us-east-1'\n    this.makeRequest({method, bucketName, headers}, payload, [200], region, false, cb)\n  }\n\n  // List of buckets created.\n  //\n  // __Arguments__\n  // * `callback(err, buckets)` _function_ - callback function with error as the first argument. `buckets` is an array of bucket information\n  //\n  // `buckets` array element:\n  // * `bucket.name` _string_ : bucket name\n  // * `bucket.creationDate` _Date_: date when bucket was created\n  listBuckets(cb) {\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    var method = 'GET'\n    this.makeRequest({method}, '', [200], 'us-east-1', true, (e, response) => {\n      if (e) return cb(e)\n      var transformer = transformers.getListBucketTransformer()\n      var buckets\n      pipesetup(response, transformer)\n        .on('data', result => buckets = result)\n        .on('error', e => cb(e))\n        .on('end', () => cb(null, buckets))\n    })\n  }\n\n  // Returns a stream that emits objects that are partially uploaded.\n  //\n  // __Arguments__\n  // * `bucketname` _string_: name of the bucket\n  // * `prefix` _string_: prefix of the object names that are partially uploaded (optional, default `''`)\n  // * `recursive` _bool_: directory style listing when false, recursive listing when true (optional, default `false`)\n  //\n  // __Return Value__\n  // * `stream` _Stream_ : emits objects of the format:\n  //   * `object.key` _string_: name of the object\n  //   * `object.uploadId` _string_: upload ID of the object\n  //   * `object.size` _Integer_: size of the partially uploaded object\n  listIncompleteUploads(bucket, prefix, recursive) {\n    if (prefix === undefined) prefix = ''\n    if (recursive === undefined) recursive = false\n    if (!isValidBucketName(bucket)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucket)\n    }\n    if (!isValidPrefix(prefix)) {\n      throw new errors.InvalidPrefixError(`Invalid prefix : ${prefix}`)\n    }\n    if (!isBoolean(recursive)) {\n      throw new TypeError('recursive should be of type \"boolean\"')\n    }\n    var delimiter = recursive ? '' : '/'\n    var keyMarker = ''\n    var uploadIdMarker = ''\n    var uploads = []\n    var ended = false\n    var readStream = Stream.Readable({objectMode: true})\n    readStream._read = () => {\n      // push one upload info per _read()\n      if (uploads.length) {\n        return readStream.push(uploads.shift())\n      }\n      if (ended) return readStream.push(null)\n      this.listIncompleteUploadsQuery(bucket, prefix, keyMarker, uploadIdMarker, delimiter)\n        .on('error', e => readStream.emit('error', e))\n        .on('data', result => {\n          result.prefixes.forEach(prefix => uploads.push(prefix))\n          async.eachSeries(result.uploads, (upload, cb) => {\n            // for each incomplete upload add the sizes of its uploaded parts\n            this.listParts(bucket, upload.key, upload.uploadId, (err, parts) => {\n              if (err) return cb(err)\n              upload.size = parts.reduce((acc, item) => acc + item.size, 0)\n              uploads.push(upload)\n              cb()\n            })\n          }, err => {\n            if (err) {\n              readStream.emit('error', err)\n              return\n            }\n            if (result.isTruncated) {\n              keyMarker = result.nextKeyMarker\n              uploadIdMarker = result.nextUploadIdMarker\n            } else {\n              ended = true\n            }\n            readStream._read()\n          })\n        })\n    }\n    return readStream\n  }\n\n  // To check if a bucket already exists.\n  //\n  // __Arguments__\n  // * `bucketName` _string_ : name of the bucket\n  // * `callback(err)` _function_ : `err` is `null` if the bucket exists\n  bucketExists(bucketName, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    var method = 'HEAD'\n    this.makeRequest({method, bucketName}, '', [200], '', false, err => {\n      if (err) {\n        if (err.code == 'NoSuchBucket' || err.code == 'NotFound') return cb(null, false)\n        return cb(err)\n      }\n      cb(null, true)\n    })\n  }\n\n  // Remove a bucket.\n  //\n  // __Arguments__\n  // * `bucketName` _string_ : name of the bucket\n  // * `callback(err)` _function_ : `err` is `null` if the bucket is removed successfully.\n  removeBucket(bucketName, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    var method = 'DELETE'\n    this.makeRequest({method, bucketName}, '', [204], '', false, (e) => {\n      // If the bucket was successfully removed, remove the region map entry.\n      if (!e) delete(this.regionMap[bucketName])\n      cb(e)\n    })\n  }\n\n  // Remove the partially uploaded object.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `callback(err)` _function_: callback function is called with non `null` value in case of error\n  removeIncompleteUpload(bucketName, objectName, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.isValidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    var removeUploadId\n    async.during(\n      cb => {\n        this.findUploadId(bucketName, objectName, (e, uploadId) => {\n          if (e) return cb(e)\n          removeUploadId = uploadId\n          cb(null, uploadId)\n        })\n      },\n      cb => {\n        var method = 'DELETE'\n        var query = `uploadId=${removeUploadId}`\n        this.makeRequest({method, bucketName, objectName, query}, '', [204], '', false, e => cb(e))\n      },\n      cb\n    )\n  }\n\n  // Callback is called with `error` in case of error or `null` in case of success\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `filePath` _string_: path to which the object data will be written to\n  // * `getOpts` _object_: Version of the object in the form `{versionId:'my-uuid'}`. Default is `{}`. (optional)\n  // * `callback(err)` _function_: callback is called with `err` in case of error.\n  fGetObject(bucketName, objectName, filePath, getOpts={}, cb) {\n    // Input validation.\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isString(filePath)) {\n      throw new TypeError('filePath should be of type \"string\"')\n    }\n    // Backward Compatibility\n    if (isFunction(getOpts)) {\n      cb = getOpts\n      getOpts = {}\n    }\n\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    // Internal data.\n    var partFile\n    var partFileStream\n    var objStat\n\n    // Rename wrapper.\n    var rename = err => {\n      if (err) return cb(err)\n      fs.rename(partFile, filePath, cb)\n    }\n\n    async.waterfall([\n      cb => this.statObject(bucketName, objectName, getOpts, cb),\n      (result, cb) => {\n        objStat = result\n        // Create any missing top level directories.\n        mkdirp(path.dirname(filePath), cb)\n      },\n      (ignore, cb) => {\n        partFile = `${filePath}.${objStat.etag}.part.minio`\n        fs.stat(partFile, (e, stats) => {\n          var offset = 0\n          if (e) {\n            partFileStream = fs.createWriteStream(partFile, {flags: 'w'})\n          } else {\n            if (objStat.size === stats.size) return rename()\n            offset = stats.size\n            partFileStream = fs.createWriteStream(partFile, {flags: 'a'})\n          }\n          this.getPartialObject(bucketName, objectName, offset, 0, getOpts, cb)\n        })\n      },\n      (downloadStream, cb) => {\n        pipesetup(downloadStream, partFileStream)\n          .on('error', e => cb(e))\n          .on('finish', cb)\n      },\n      cb => fs.stat(partFile, cb),\n      (stats, cb) => {\n        if (stats.size === objStat.size) return cb()\n        cb(new Error('Size mismatch between downloaded file and the object'))\n      }\n    ], rename)\n  }\n\n  // Callback is called with readable stream of the object content.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `getOpts` _object_: Version of the object in the form `{versionId:'my-uuid'}`. Default is `{}`. (optional)\n  // * `callback(err, stream)` _function_: callback is called with `err` in case of error. `stream` is the object content stream\n  getObject(bucketName, objectName, getOpts={}, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    // Backward Compatibility\n    if (isFunction(getOpts)) {\n      cb = getOpts\n      getOpts = {}\n    }\n\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    this.getPartialObject(bucketName, objectName, 0, 0, getOpts, cb)\n  }\n\n  // Callback is called with readable stream of the partial object content.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `offset` _number_: offset of the object from where the stream will start\n  // * `length` _number_: length of the object that will be read in the stream (optional, if not specified we read the rest of the file from the offset)\n  // * `getOpts` _object_: Version of the object in the form `{versionId:'my-uuid'}`. Default is `{}`. (optional)\n  // * `callback(err, stream)` _function_: callback is called with `err` in case of error. `stream` is the object content stream\n  getPartialObject(bucketName, objectName, offset, length, getOpts={}, cb) {\n    if (isFunction(length)) {\n      cb = length\n      length = 0\n    }\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isNumber(offset)) {\n      throw new TypeError('offset should be of type \"number\"')\n    }\n    if (!isNumber(length)) {\n      throw new TypeError('length should be of type \"number\"')\n    }\n    // Backward Compatibility\n    if (isFunction(getOpts)) {\n      cb = getOpts\n      getOpts = {}\n    }\n\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    var range = ''\n    if (offset || length) {\n      if (offset) {\n        range = `bytes=${+offset}-`\n      } else {\n        range = 'bytes=0-'\n        offset = 0\n      }\n      if (length) {\n        range += `${(+length + offset) - 1}`\n      }\n    }\n\n    var headers = {}\n    if (range !== '') {\n      headers.range = range\n    }\n\n    var expectedStatusCodes = [200]\n    if (range) {\n      expectedStatusCodes.push(206)\n    }\n    var method = 'GET'\n\n    var query = querystring.stringify(getOpts)\n    this.makeRequest({method, bucketName, objectName, headers, query}, '', expectedStatusCodes, '', true, cb)\n  }\n\n  // Uploads the object using contents from a file\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `filePath` _string_: file path of the file to be uploaded\n  // * `metaData` _Javascript Object_: metaData assosciated with the object\n  // * `callback(err, objInfo)` _function_: non null `err` indicates error, `objInfo` _object_ which contains versionId and etag.\n  fPutObject(bucketName, objectName, filePath, metaData, callback) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n\n    if (!isString(filePath)) {\n      throw new TypeError('filePath should be of type \"string\"')\n    }\n    if (isFunction(metaData)) {\n      callback = metaData\n      metaData = {} // Set metaData empty if no metaData provided.\n    }\n    if (!isObject(metaData)) {\n      throw new TypeError('metaData should be of type \"object\"')\n    }\n\n    // Inserts correct `content-type` attribute based on metaData and filePath\n    metaData = insertContentType(metaData, filePath)\n\n    // Updates metaData to have the correct prefix if needed\n    metaData = prependXAMZMeta(metaData)\n    var size\n    var partSize\n\n    async.waterfall([\n      cb => fs.stat(filePath, cb),\n      (stats, cb) => {\n        size = stats.size\n        if (size > this.maxObjectSize) {\n          return cb(new Error(`${filePath} size : ${stats.size}, max allowed size : 5TB`))\n        }\n        if (size <= this.partSize) {\n          // simple PUT request, no multipart\n          var multipart = false\n          var uploader = this.getUploader(bucketName, objectName, metaData, multipart)\n          var hash = transformers.getHashSummer(this.enableSHA256)\n          var start = 0\n          var end = size - 1\n          var autoClose = true\n          if (size === 0) end = 0\n          var options = {start, end, autoClose}\n          pipesetup(fs.createReadStream(filePath, options), hash)\n            .on('data', data => {\n              var md5sum = data.md5sum\n              var sha256sum = data.sha256sum\n              var stream = fs.createReadStream(filePath, options)\n              uploader(stream, size, sha256sum, md5sum, (err, objInfo) => {\n                callback(err, objInfo)\n                cb(true)\n              })\n            })\n            .on('error', e => cb(e))\n          return\n        }\n        this.findUploadId(bucketName, objectName, cb)\n      },\n      (uploadId, cb) => {\n        // if there was a previous incomplete upload, fetch all its uploaded parts info\n        if (uploadId) return this.listParts(bucketName, objectName, uploadId,  (e, etags) =>  cb(e, uploadId, etags))\n        // there was no previous upload, initiate a new one\n        this.initiateNewMultipartUpload(bucketName, objectName, metaData, (e, uploadId) => cb(e, uploadId, []))\n      },\n      (uploadId, etags, cb) => {\n        partSize = this.calculatePartSize(size)\n        var multipart = true\n        var uploader = this.getUploader(bucketName, objectName, metaData, multipart)\n\n        // convert array to object to make things easy\n        var parts = etags.reduce(function(acc, item) {\n          if (!acc[item.part]) {\n            acc[item.part] = item\n          }\n          return acc\n        }, {})\n        var partsDone = []\n        var partNumber = 1\n        var uploadedSize = 0\n        async.whilst(\n          cb => { cb(null, uploadedSize < size) },\n          cb => {\n            var part = parts[partNumber]\n            var hash = transformers.getHashSummer(this.enableSHA256)\n            var length = partSize\n            if (length > (size - uploadedSize)) {\n              length = size - uploadedSize\n            }\n            var start = uploadedSize\n            var end = uploadedSize + length - 1\n            var autoClose = true\n            var options = {autoClose, start, end}\n            // verify md5sum of each part\n            pipesetup(fs.createReadStream(filePath, options), hash)\n              .on('data', data => {\n                var md5sumHex = (Buffer.from(data.md5sum, 'base64')).toString('hex')\n                if (part && (md5sumHex === part.etag)) {\n                  // md5 matches, chunk already uploaded\n                  partsDone.push({part: partNumber, etag: part.etag})\n                  partNumber++\n                  uploadedSize += length\n                  return cb()\n                }\n                // part is not uploaded yet, or md5 mismatch\n                var stream = fs.createReadStream(filePath, options)\n                uploader(uploadId, partNumber, stream, length,\n                         data.sha256sum, data.md5sum, (e, objInfo) => {\n                           if (e) return cb(e)\n                           partsDone.push({part: partNumber, etag: objInfo.etag})\n                           partNumber++\n                           uploadedSize += length\n                           return cb()\n                         })\n              })\n              .on('error', e => cb(e))\n          },\n          e => {\n            if (e) return cb(e)\n            cb(null, partsDone, uploadId)\n          }\n        )\n      },\n      // all parts uploaded, complete the multipart upload\n      (etags, uploadId, cb) => this.completeMultipartUpload(bucketName, objectName, uploadId, etags, cb)\n    ], (err, ...rest) => {\n      if (err === true) return\n      callback(err, ...rest)\n    })\n  }\n\n  // Uploads the object.\n  //\n  // Uploading a stream\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `stream` _Stream_: Readable stream\n  // * `size` _number_: size of the object (optional)\n  // * `callback(err, etag)` _function_: non null `err` indicates error, `etag` _string_ is the etag of the object uploaded.\n  //\n  // Uploading \"Buffer\" or \"string\"\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `string or Buffer` _string_ or _Buffer_: string or buffer\n  // * `callback(err, objInfo)` _function_: `err` is `null` in case of success and `info` will have the following object details:\n  //   * `etag` _string_: etag of the object\n  //   * `versionId` _string_: versionId of the object\n  putObject(bucketName, objectName, stream, size, metaData, callback) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n\n    // We'll need to shift arguments to the left because of size and metaData.\n    if (isFunction(size)) {\n      callback = size\n      metaData = {}\n    } else if (isFunction(metaData)) {\n      callback = metaData\n      metaData = {}\n    }\n\n    // We'll need to shift arguments to the left because of metaData\n    // and size being optional.\n    if (isObject(size)) {\n      metaData = size\n    }\n\n    // Ensures Metadata has appropriate prefix for A3 API\n    metaData = prependXAMZMeta(metaData)\n    if (typeof stream === 'string' || stream instanceof Buffer) {\n      // Adapts the non-stream interface into a stream.\n      size = stream.length\n      stream = readableStream(stream)\n    } else if (!isReadableStream(stream)) {\n      throw new TypeError('third argument should be of type \"stream.Readable\" or \"Buffer\" or \"string\"')\n    }\n\n    if (!isFunction(callback)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    if (isNumber(size) && size < 0) {\n      throw new errors.InvalidArgumentError(`size cannot be negative, given size: ${size}`)\n    }\n\n    // Get the part size and forward that to the BlockStream. Default to the\n    // largest block size possible if necessary.\n    if (!isNumber(size))\n      size = this.maxObjectSize\n\n    size = this.calculatePartSize(size)\n\n    // s3 requires that all non-end chunks be at least `this.partSize`,\n    // so we chunk the stream until we hit either that size or the end before\n    // we flush it to s3.\n    let chunker = new BlockStream2({size, zeroPadding: false})\n\n    // This is a Writable stream that can be written to in order to upload\n    // to the specified bucket and object automatically.\n    let uploader = new ObjectUploader(this, bucketName, objectName, size, metaData, callback)\n    // stream => chunker => uploader\n    stream.pipe(chunker).pipe(uploader)\n  }\n\n  // Copy the object.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `srcObject` _string_: path of the source object to be copied\n  // * `conditions` _CopyConditions_: copy conditions that needs to be satisfied (optional, default `null`)\n  // * `callback(err, {etag, lastModified})` _function_: non null `err` indicates error, `etag` _string_ and `listModifed` _Date_ are respectively the etag and the last modified date of the newly copied object\n  copyObjectV1(arg1, arg2, arg3, arg4, arg5) {\n    var bucketName = arg1\n    var objectName = arg2\n    var srcObject = arg3\n    var conditions, cb\n    if (typeof arg4 == 'function' && arg5 === undefined) {\n      conditions = null\n      cb = arg4\n    } else {\n      conditions = arg4\n      cb = arg5\n    }\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isString(srcObject)) {\n      throw new TypeError('srcObject should be of type \"string\"')\n    }\n    if (srcObject === \"\") {\n      throw new errors.InvalidPrefixError(`Empty source prefix`)\n    }\n\n    if (conditions !== null && !(conditions instanceof CopyConditions)) {\n      throw new TypeError('conditions should be of type \"CopyConditions\"')\n    }\n\n    var headers = {}\n    headers['x-amz-copy-source'] = uriResourceEscape(srcObject)\n\n    if (conditions !== null) {\n      if (conditions.modified !== \"\") {\n        headers['x-amz-copy-source-if-modified-since'] = conditions.modified\n      }\n      if (conditions.unmodified !== \"\") {\n        headers['x-amz-copy-source-if-unmodified-since'] = conditions.unmodified\n      }\n      if (conditions.matchETag !== \"\") {\n        headers['x-amz-copy-source-if-match'] = conditions.matchETag\n      }\n      if (conditions.matchEtagExcept !== \"\") {\n        headers['x-amz-copy-source-if-none-match'] = conditions.matchETagExcept\n      }\n    }\n\n    var method = 'PUT'\n    this.makeRequest({method, bucketName, objectName, headers}, '', [200], '', true, (e, response) => {\n      if (e) return cb(e)\n      var transformer = transformers.getCopyObjectTransformer()\n      pipesetup(response, transformer)\n        .on('error', e => cb(e))\n        .on('data', data => cb(null, data))\n    })\n  }\n\n  /**\n     * Internal Method to perform copy of an object.\n     * @param sourceConfig __object__   instance of CopySourceOptions @link ./helpers/CopySourceOptions\n     * @param destConfig  __object__   instance of CopyDestinationOptions @link ./helpers/CopyDestinationOptions\n     * @param cb __function__ called with null if there is an error\n     * @returns Promise if no callack is passed.\n     */\n  copyObjectV2(sourceConfig, destConfig, cb){\n\n    if(!(sourceConfig instanceof CopySourceOptions )){\n      throw new errors.InvalidArgumentError('sourceConfig should of type CopySourceOptions ')\n    }\n    if(!(destConfig instanceof CopyDestinationOptions )){\n      throw new errors.InvalidArgumentError('destConfig should of type CopyDestinationOptions ')\n    }\n    if(!destConfig.validate()){\n      return false\n    }\n    if(!destConfig.validate()){\n      return false\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    const headers = Object.assign({}, sourceConfig.getHeaders(), destConfig.getHeaders())\n\n    const  bucketName = destConfig.Bucket\n    const objectName= destConfig.Object\n\n    const method = 'PUT'\n    this.makeRequest({method, bucketName, objectName, headers}, '', [200], '', true, (e, response) => {\n      if (e) return cb(e)\n      const transformer = transformers.getCopyObjectTransformer()\n      pipesetup(response, transformer)\n        .on('error', e => cb(e))\n        .on('data', data => {\n          const resHeaders = response.headers\n\n          const copyObjResponse = {\n            Bucket: destConfig.Bucket,\n            Key: destConfig.Object,\n            LastModified: data.LastModified,\n            MetaData: extractMetadata(resHeaders),\n            VersionId:getVersionId(resHeaders),\n            SourceVersionId:getSourceVersionId(resHeaders),\n            Etag:sanitizeETag(resHeaders.etag),\n            Size: +resHeaders['content-length']\n          }\n\n          return  cb(null, copyObjResponse)\n        })\n    })\n  }\n\n  // Backward compatibility for Copy Object API.\n  copyObject(...allArgs) {\n    if (allArgs[0] instanceof CopySourceOptions && allArgs[1] instanceof CopyDestinationOptions) {\n      return this.copyObjectV2(...arguments)\n    }\n    return this.copyObjectV1(...arguments)\n  }\n\n  // list a batch of objects\n  listObjectsQuery(bucketName, prefix, marker, listQueryOpts={}) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isString(prefix)) {\n      throw new TypeError('prefix should be of type \"string\"')\n    }\n    if (!isString(marker)) {\n      throw new TypeError('marker should be of type \"string\"')\n    }\n    let{\n      Delimiter,\n      MaxKeys,\n      IncludeVersion,\n    } = listQueryOpts\n\n    if (!isObject(listQueryOpts)) {\n      throw new TypeError('listQueryOpts should be of type \"object\"')\n    }\n\n    if (!isString(Delimiter)) {\n      throw new TypeError('Delimiter should be of type \"string\"')\n    }\n    if (!isNumber(MaxKeys)) {\n      throw new TypeError('MaxKeys should be of type \"number\"')\n    }\n\n    const queries = []\n    // escape every value in query string, except maxKeys\n    queries.push(`prefix=${uriEscape(prefix)}`)\n    queries.push(`delimiter=${uriEscape(Delimiter)}`)\n    queries.push(`encoding-type=url`)\n\n    if (IncludeVersion) {\n      queries.push(`versions`)\n    }\n\n    if (marker) {\n      marker = uriEscape(marker)\n      if (IncludeVersion) {\n        queries.push(`key-marker=${marker}`)\n      } else {\n        queries.push(`marker=${marker}`)\n      }\n    }\n\n    // no need to escape maxKeys\n    if (MaxKeys) {\n      if (MaxKeys >= 1000) {\n        MaxKeys = 1000\n      }\n      queries.push(`max-keys=${MaxKeys}`)\n    }\n    queries.sort()\n    var query = ''\n    if (queries.length > 0) {\n      query = `${queries.join('&')}`\n    }\n\n    var method = 'GET'\n    var transformer = transformers.getListObjectsTransformer()\n    this.makeRequest({method, bucketName, query}, '', [200], '', true, (e, response) => {\n      if (e) return transformer.emit('error', e)\n      pipesetup(response, transformer)\n    })\n    return transformer\n  }\n\n  // List the objects in the bucket.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `prefix` _string_: the prefix of the objects that should be listed (optional, default `''`)\n  // * `recursive` _bool_: `true` indicates recursive style listing and `false` indicates directory style listing delimited by '/'. (optional, default `false`)\n  // * `listOpts _object_: query params to list object with below keys\n  // *    listOpts.MaxKeys _int_ maximum number of keys to return\n  // *    listOpts.IncludeVersion  _bool_ true|false to include versions.\n  // __Return Value__\n  // * `stream` _Stream_: stream emitting the objects in the bucket, the object is of the format:\n  // * `obj.name` _string_: name of the object\n  // * `obj.prefix` _string_: name of the object prefix\n  // * `obj.size` _number_: size of the object\n  // * `obj.etag` _string_: etag of the object\n  // * `obj.lastModified` _Date_: modified time stamp\n  // * `obj.isDeleteMarker` _boolean_: true if it is a delete marker\n  // * `obj.versionId` _string_: versionId of the object\n  listObjects(bucketName, prefix, recursive, listOpts={}) {\n    if (prefix === undefined) prefix = ''\n    if (recursive === undefined) recursive = false\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidPrefix(prefix)) {\n      throw new errors.InvalidPrefixError(`Invalid prefix : ${prefix}`)\n    }\n    if (!isString(prefix)) {\n      throw new TypeError('prefix should be of type \"string\"')\n    }\n    if (!isBoolean(recursive)) {\n      throw new TypeError('recursive should be of type \"boolean\"')\n    }\n    if (!isObject(listOpts)) {\n      throw new TypeError('listOpts should be of type \"object\"')\n    }\n    var marker = ''\n    const listQueryOpts={\n      Delimiter:recursive ? '' : '/', // if recursive is false set delimiter to '/'\n      MaxKeys: 1000,\n      IncludeVersion:listOpts.IncludeVersion,\n    }\n    var objects = []\n    var ended = false\n    var readStream = Stream.Readable({objectMode: true})\n    readStream._read = () => {\n      // push one object per _read()\n      if (objects.length) {\n        readStream.push(objects.shift())\n        return\n      }\n      if (ended) return readStream.push(null)\n      // if there are no objects to push do query for the next batch of objects\n      this.listObjectsQuery(bucketName, prefix, marker, listQueryOpts)\n        .on('error', e => readStream.emit('error', e))\n        .on('data', result => {\n          if (result.isTruncated) {\n            marker = result.nextMarker || result.versionIdMarker\n          } else {\n            ended = true\n          }\n          objects = result.objects\n          readStream._read()\n        })\n    }\n    return readStream\n  }\n\n  // listObjectsV2Query - (List Objects V2) - List some or all (up to 1000) of the objects in a bucket.\n  //\n  // You can use the request parameters as selection criteria to return a subset of the objects in a bucket.\n  // request parameters :-\n  // * `bucketName` _string_: name of the bucket\n  // * `prefix` _string_: Limits the response to keys that begin with the specified prefix.\n  // * `continuation-token` _string_: Used to continue iterating over a set of objects.\n  // * `delimiter` _string_: A delimiter is a character you use to group keys.\n  // * `max-keys` _number_: Sets the maximum number of keys returned in the response body.\n  // * `start-after` _string_: Specifies the key to start after when listing objects in a bucket.\n  listObjectsV2Query(bucketName, prefix, continuationToken, delimiter, maxKeys, startAfter) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isString(prefix)) {\n      throw new TypeError('prefix should be of type \"string\"')\n    }\n    if (!isString(continuationToken)) {\n      throw new TypeError('continuationToken should be of type \"string\"')\n    }\n    if (!isString(delimiter)) {\n      throw new TypeError('delimiter should be of type \"string\"')\n    }\n    if (!isNumber(maxKeys)) {\n      throw new TypeError('maxKeys should be of type \"number\"')\n    }\n    if (!isString(startAfter)) {\n      throw new TypeError('startAfter should be of type \"string\"')\n    }\n    var queries = []\n\n    // Call for listing objects v2 API\n    queries.push(`list-type=2`)\n    queries.push(`encoding-type=url`)\n\n    // escape every value in query string, except maxKeys\n    queries.push(`prefix=${uriEscape(prefix)}`)\n    queries.push(`delimiter=${uriEscape(delimiter)}`)\n\n    if (continuationToken) {\n      continuationToken = uriEscape(continuationToken)\n      queries.push(`continuation-token=${continuationToken}`)\n    }\n    // Set start-after\n    if (startAfter) {\n      startAfter = uriEscape(startAfter)\n      queries.push(`start-after=${startAfter}`)\n    }\n    // no need to escape maxKeys\n    if (maxKeys) {\n      if (maxKeys >= 1000) {\n        maxKeys = 1000\n      }\n      queries.push(`max-keys=${maxKeys}`)\n    }\n    queries.sort()\n    var query = ''\n    if (queries.length > 0) {\n      query = `${queries.join('&')}`\n    }\n    var method = 'GET'\n    var transformer = transformers.getListObjectsV2Transformer()\n    this.makeRequest({method, bucketName, query}, '', [200], '', true, (e, response) => {\n      if (e) return transformer.emit('error', e)\n      pipesetup(response, transformer)\n    })\n    return transformer\n  }\n\n  // List the objects in the bucket using S3 ListObjects V2\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `prefix` _string_: the prefix of the objects that should be listed (optional, default `''`)\n  // * `recursive` _bool_: `true` indicates recursive style listing and `false` indicates directory style listing delimited by '/'. (optional, default `false`)\n  // * `startAfter` _string_: Specifies the key to start after when listing objects in a bucket. (optional, default `''`)\n  //\n  // __Return Value__\n  // * `stream` _Stream_: stream emitting the objects in the bucket, the object is of the format:\n  //   * `obj.name` _string_: name of the object\n  //   * `obj.prefix` _string_: name of the object prefix\n  //   * `obj.size` _number_: size of the object\n  //   * `obj.etag` _string_: etag of the object\n  //   * `obj.lastModified` _Date_: modified time stamp\n  listObjectsV2(bucketName, prefix, recursive, startAfter) {\n    if (prefix === undefined) prefix = ''\n    if (recursive === undefined) recursive = false\n    if (startAfter === undefined) startAfter = ''\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidPrefix(prefix)) {\n      throw new errors.InvalidPrefixError(`Invalid prefix : ${prefix}`)\n    }\n    if (!isString(prefix)) {\n      throw new TypeError('prefix should be of type \"string\"')\n    }\n    if (!isBoolean(recursive)) {\n      throw new TypeError('recursive should be of type \"boolean\"')\n    }\n    if (!isString(startAfter)) {\n      throw new TypeError('startAfter should be of type \"string\"')\n    }\n    // if recursive is false set delimiter to '/'\n    var delimiter = recursive ? '' : '/'\n    var continuationToken = ''\n    var objects = []\n    var ended = false\n    var readStream = Stream.Readable({objectMode: true})\n    readStream._read = () => {\n      // push one object per _read()\n      if (objects.length) {\n        readStream.push(objects.shift())\n        return\n      }\n      if (ended) return readStream.push(null)\n      // if there are no objects to push do query for the next batch of objects\n      this.listObjectsV2Query(bucketName, prefix, continuationToken, delimiter, 1000, startAfter)\n        .on('error', e => readStream.emit('error', e))\n        .on('data', result => {\n          if (result.isTruncated) {\n            continuationToken = result.nextContinuationToken\n          } else {\n            ended = true\n          }\n          objects = result.objects\n          readStream._read()\n        })\n    }\n    return readStream\n  }\n\n  // Stat information of the object.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `statOpts`  _object_ : Version of the object in the form `{versionId:'my-uuid'}`. Default is `{}`. (optional).\n  // * `callback(err, stat)` _function_: `err` is not `null` in case of error, `stat` contains the object information:\n  //   * `stat.size` _number_: size of the object\n  //   * `stat.etag` _string_: etag of the object\n  //   * `stat.metaData` _string_: MetaData of the object\n  //   * `stat.lastModified` _Date_: modified time stamp\n  //   * `stat.versionId` _string_: version id of the object if available\n  statObject(bucketName, objectName, statOpts={}, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    // backward compatibility\n    if (isFunction(statOpts)) {\n      cb = statOpts\n      statOpts={}\n    }\n\n    if(!isObject(statOpts)){\n      throw new errors.InvalidArgumentError('statOpts should be of type \"object\"')\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    var query = querystring.stringify(statOpts)\n    var method = 'HEAD'\n    this.makeRequest({method, bucketName, objectName, query},'' , [200], '', true, (e, response) => {\n      if (e) return cb(e)\n\n      // We drain the socket so that the connection gets closed. Note that this\n      // is not expensive as the socket will not have any data.\n      response.on('data', ()=>{})\n\n      const result = {\n        size: +response.headers['content-length'],\n        metaData: extractMetadata(response.headers),\n        lastModified: new Date(response.headers['last-modified']),\n        versionId:getVersionId(response.headers),\n        etag:sanitizeETag(response.headers.etag)\n      }\n\n      cb(null, result)\n    })\n  }\n\n  // Remove the specified object.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `removeOpts` _object_: Version of the object in the form `{versionId:'my-uuid', governanceBypass:true|false}`. Default is `{}`. (optional)\n  // * `callback(err)` _function_: callback function is called with non `null` value in case of error\n  removeObject(bucketName, objectName, removeOpts={} , cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    // backward compatibility\n    if (isFunction(removeOpts)) {\n      cb = removeOpts\n      removeOpts={}\n    }\n\n    if(!isObject(removeOpts)){\n      throw new errors.InvalidArgumentError('removeOpts should be of type \"object\"')\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    const method = 'DELETE'\n    const queryParams = {}\n\n    if(removeOpts.versionId){\n      queryParams.versionId=`${removeOpts.versionId}`\n    }\n    const headers = {}\n    if(removeOpts.governanceBypass){\n      headers[\"X-Amz-Bypass-Governance-Retention\"]=true\n    }\n\n    const query = querystring.stringify( queryParams )\n\n    let requestOptions = {method, bucketName, objectName, headers}\n    if(query){\n      requestOptions['query']=query\n    }\n\n    this.makeRequest(requestOptions, '', [200, 204], '', false, cb)\n  }\n\n  // Remove all the objects residing in the objectsList.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectsList` _array_: array of objects of one of the following:\n  // *         List of Object names as array of strings which are object keys:  ['objectname1','objectname2']\n  // *         List of Object name and versionId as an object:  [{name:\"objectname\",versionId:\"my-version-id\"}]\n\n  removeObjects(bucketName, objectsList, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isArray(objectsList)) {\n      throw new errors.InvalidArgumentError('objectsList should be a list')\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    const maxEntries = 1000\n    const query = 'delete'\n    const method = 'POST'\n\n    let result = objectsList.reduce((result, entry) => {\n      result.list.push(entry)\n      if (result.list.length === maxEntries) {\n        result.listOfList.push(result.list)\n        result.list = []\n      }\n      return result\n    }, {listOfList: [], list:[]})\n\n    if (result.list.length > 0) {\n      result.listOfList.push(result.list)\n    }\n\n    const encoder = new TextEncoder()\n\n    async.eachSeries(result.listOfList, (list, callback) => {\n      var objects=[]\n      list.forEach(function(value){\n        if (isObject(value)) {\n          objects.push({\"Key\": value.name,  \"VersionId\": value.versionId})\n        } else {\n          objects.push({\"Key\": value})\n        }\n      })\n      let deleteObjects = {\"Delete\": {\"Quiet\": true, \"Object\": objects}}\n      const builder = new xml2js.Builder({ headless: true })\n      let payload = builder.buildObject(deleteObjects)\n      payload = encoder.encode(payload)\n      const headers = {}\n\n      headers['Content-MD5'] = toMd5(payload)\n\n      this.makeRequest({ method, bucketName, query, headers}, payload, [200], '', false, (e) => {\n        if (e) return callback(e)\n        callback(null)\n      })\n    }, cb)\n  }\n\n\n  // Get the policy on a bucket or an object prefix.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `callback(err, policy)` _function_: callback function\n  getBucketPolicy(bucketName, cb) {\n    // Validate arguments.\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError(`Invalid bucket name: ${bucketName}`)\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    let method = 'GET'\n    let query = 'policy'\n    this.makeRequest({method, bucketName, query}, '', [200], '', true, (e, response) => {\n      if (e) return cb(e)\n\n      let policy = Buffer.from('')\n      pipesetup(response, transformers.getConcater())\n        .on('data', data => policy = data)\n        .on('error', cb)\n        .on('end', () => {\n          cb(null, policy.toString())\n        })\n    })\n  }\n\n  // Set the policy on a bucket or an object prefix.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `bucketPolicy` _string_: bucket policy (JSON stringify'ed)\n  // * `callback(err)` _function_: callback function\n  setBucketPolicy(bucketName, policy, cb) {\n    // Validate arguments.\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError(`Invalid bucket name: ${bucketName}`)\n    }\n    if (!isString(policy)) {\n      throw new errors.InvalidBucketPolicyError(`Invalid bucket policy: ${policy} - must be \"string\"`)\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    let method = 'DELETE'\n    let query = 'policy'\n\n    if (policy) {\n      method = 'PUT'\n    }\n\n    this.makeRequest({method, bucketName, query}, policy, [204], '', false, cb)\n  }\n\n  // Generate a generic presigned URL which can be\n  // used for HTTP methods GET, PUT, HEAD and DELETE\n  //\n  // __Arguments__\n  // * `method` _string_: name of the HTTP method\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `expiry` _number_: expiry in seconds (optional, default 7 days)\n  // * `reqParams` _object_: request parameters (optional) e.g {versionId:\"10fa9946-3f64-4137-a58f-888065c0732e\"}\n  // * `requestDate` _Date_: A date object, the url will be issued at (optional)\n  presignedUrl(method, bucketName, objectName, expires, reqParams, requestDate, cb) {\n    if (this.anonymous) {\n      throw new errors.AnonymousRequestError('Presigned ' + method + ' url cannot be generated for anonymous requests')\n    }\n    if (isFunction(requestDate)) {\n      cb = requestDate\n      requestDate = new Date()\n    }\n    if (isFunction(reqParams)) {\n      cb = reqParams\n      reqParams = {}\n      requestDate = new Date()\n    }\n    if (isFunction(expires)) {\n      cb = expires\n      reqParams = {}\n      expires = 24 * 60 * 60 * 7 // 7 days in seconds\n      requestDate = new Date()\n    }\n    if (!isNumber(expires)) {\n      throw new TypeError('expires should be of type \"number\"')\n    }\n    if (!isObject(reqParams)) {\n      throw new TypeError('reqParams should be of type \"object\"')\n    }\n    if (!isValidDate(requestDate)) {\n      throw new TypeError('requestDate should be of type \"Date\" and valid')\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    var query = querystring.stringify(reqParams)\n    this.getBucketRegion(bucketName, (e, region) => {\n      if (e) return cb(e)\n      // This statement is added to ensure that we send error through\n      // callback on presign failure.\n      var url\n      var reqOptions = this.getRequestOptions({method,\n                                               region,\n                                               bucketName,\n                                               objectName,\n                                               query})\n      try {\n        url = presignSignatureV4(reqOptions, this.accessKey, this.secretKey,\n                                 this.sessionToken, region, requestDate, expires, this.signingHost)\n      } catch (pe) {\n        return cb(pe)\n      }\n      cb(null, url)\n    })\n  }\n\n  // Generate a presigned URL for GET\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `expiry` _number_: expiry in seconds (optional, default 7 days)\n  // * `respHeaders` _object_: response headers to override or request params for query (optional) e.g {versionId:\"10fa9946-3f64-4137-a58f-888065c0732e\"}\n  // * `requestDate` _Date_: A date object, the url will be issued at (optional)\n  presignedGetObject(bucketName, objectName, expires, respHeaders, requestDate, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n\n    if (isFunction(respHeaders)) {\n      cb = respHeaders\n      respHeaders = {}\n      requestDate = new Date()\n    }\n\n    var validRespHeaders = ['response-content-type', 'response-content-language', 'response-expires', 'response-cache-control',\n                            'response-content-disposition', 'response-content-encoding']\n    validRespHeaders.forEach(header => {\n      if  (respHeaders !== undefined && respHeaders[header] !== undefined && !isString(respHeaders[header])) {\n        throw new TypeError(`response header ${header} should be of type \"string\"`)\n      }\n    })\n    return this.presignedUrl('GET', bucketName, objectName, expires, respHeaders, requestDate, cb)\n  }\n\n  // Generate a presigned URL for PUT. Using this URL, the browser can upload to S3 only with the specified object name.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `expiry` _number_: expiry in seconds (optional, default 7 days)\n  presignedPutObject(bucketName, objectName, expires, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ${bucketName}')\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError('Invalid object name: ${objectName}')\n    }\n    return this.presignedUrl('PUT', bucketName, objectName, expires, cb)\n  }\n\n  // return PostPolicy object\n  newPostPolicy() {\n    return new PostPolicy()\n  }\n\n  // presignedPostPolicy can be used in situations where we want more control on the upload than what\n  // presignedPutObject() provides. i.e Using presignedPostPolicy we will be able to put policy restrictions\n  // on the object's `name` `bucket` `expiry` `Content-Type`\n  presignedPostPolicy(postPolicy, cb) {\n    if (this.anonymous) {\n      throw new errors.AnonymousRequestError('Presigned POST policy cannot be generated for anonymous requests')\n    }\n    if (!isObject(postPolicy)) {\n      throw new TypeError('postPolicy should be of type \"object\"')\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('cb should be of type \"function\"')\n    }\n    this.getBucketRegion(postPolicy.formData.bucket, (e, region) => {\n      if (e) return cb(e)\n      var date = new Date()\n      var dateStr = makeDateLong(date)\n\n      if (!postPolicy.policy.expiration) {\n        // 'expiration' is mandatory field for S3.\n        // Set default expiration date of 7 days.\n        var expires = new Date()\n        expires.setSeconds(24 * 60 * 60 * 7)\n        postPolicy.setExpires(expires)\n      }\n\n      postPolicy.policy.conditions.push(['eq', '$x-amz-date', dateStr])\n      postPolicy.formData['x-amz-date'] = dateStr\n\n      postPolicy.policy.conditions.push(['eq', '$x-amz-algorithm', 'AWS4-HMAC-SHA256'])\n      postPolicy.formData['x-amz-algorithm'] = 'AWS4-HMAC-SHA256'\n\n      postPolicy.policy.conditions.push([\"eq\", \"$x-amz-credential\", this.accessKey + \"/\" + getScope(region, date)])\n      postPolicy.formData['x-amz-credential'] = this.accessKey + \"/\" + getScope(region, date)\n\n      if (this.sessionToken) {\n        postPolicy.policy.conditions.push(['eq', '$x-amz-security-token', this.sessionToken])\n        postPolicy.formData['x-amz-security-token'] = this.sessionToken\n      }\n\n      var policyBase64 = Buffer.from(JSON.stringify(postPolicy.policy)).toString('base64')\n\n      postPolicy.formData.policy = policyBase64\n\n      var signature = postPresignSignatureV4(region, date, this.secretKey, policyBase64)\n\n      postPolicy.formData['x-amz-signature'] = signature\n      var opts = {}\n      opts.region = region\n      opts.bucketName = postPolicy.formData.bucket\n      var reqOptions = this.getRequestOptions(opts)\n      var portStr = (this.port == 80 || this.port === 443) ? '' : `:${this.port.toString()}`\n      var urlStr = `${reqOptions.protocol}//${reqOptions.host}${portStr}${reqOptions.path}`\n      cb(null, {postURL: urlStr,formData: postPolicy.formData})\n    })\n  }\n\n  // Calls implemented below are related to multipart.\n\n  // Initiate a new multipart upload.\n  initiateNewMultipartUpload(bucketName, objectName, metaData, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isObject(metaData)) {\n      throw new errors.InvalidObjectNameError('contentType should be of type \"object\"')\n    }\n    var method = 'POST'\n    let headers = Object.assign({}, metaData)\n    var query = 'uploads'\n    this.makeRequest({method, bucketName, objectName, query, headers}, '', [200], '', true, (e, response) => {\n      if (e) return cb(e)\n      var transformer = transformers.getInitiateMultipartTransformer()\n      pipesetup(response, transformer)\n        .on('error', e => cb(e))\n        .on('data', uploadId => cb(null, uploadId))\n    })\n  }\n\n  // Complete the multipart upload. After all the parts are uploaded issuing\n  // this call will aggregate the parts on the server into a single object.\n  completeMultipartUpload(bucketName, objectName, uploadId, etags, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isString(uploadId)) {\n      throw new TypeError('uploadId should be of type \"string\"')\n    }\n    if (!isObject(etags)) {\n      throw new TypeError('etags should be of type \"Array\"')\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('cb should be of type \"function\"')\n    }\n\n    if (!uploadId) {\n      throw new errors.InvalidArgumentError('uploadId cannot be empty')\n    }\n\n    var method = 'POST'\n    var query = `uploadId=${uriEscape(uploadId)}`\n\n    var parts = []\n\n    etags.forEach(element => {\n      parts.push({\n        Part: [{\n          PartNumber: element.part\n        }, {\n          ETag: element.etag\n        }]\n      })\n    })\n\n    var payloadObject = {CompleteMultipartUpload: parts}\n    var payload = Xml(payloadObject)\n\n    this.makeRequest({method, bucketName, objectName, query}, payload, [200], '', true, (e, response) => {\n      if (e) return cb(e)\n      var transformer = transformers.getCompleteMultipartTransformer()\n      pipesetup(response, transformer)\n        .on('error', e => cb(e))\n        .on('data', result => {\n          if (result.errCode) {\n            // Multipart Complete API returns an error XML after a 200 http status\n            cb(new errors.S3Error(result.errMessage))\n          } else {\n            const completeMultipartResult = {\n              etag: result.etag,\n              versionId:getVersionId(response.headers)\n            }\n            cb(null, completeMultipartResult)\n          }\n        })\n    })\n  }\n\n  // Get part-info of all parts of an incomplete upload specified by uploadId.\n  listParts(bucketName, objectName, uploadId, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isString(uploadId)) {\n      throw new TypeError('uploadId should be of type \"string\"')\n    }\n    if (!uploadId) {\n      throw new errors.InvalidArgumentError('uploadId cannot be empty')\n    }\n    var parts = []\n    var listNext = (marker) => {\n      this.listPartsQuery(bucketName, objectName, uploadId, marker, (e, result) => {\n        if (e) {\n          cb(e)\n          return\n        }\n        parts = parts.concat(result.parts)\n        if (result.isTruncated) {\n          listNext(result.marker)\n          return\n        }\n        cb(null, parts)\n      })\n    }\n    listNext(0)\n  }\n\n  // Called by listParts to fetch a batch of part-info\n  listPartsQuery(bucketName, objectName, uploadId, marker, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isString(uploadId)) {\n      throw new TypeError('uploadId should be of type \"string\"')\n    }\n    if (!isNumber(marker)) {\n      throw new TypeError('marker should be of type \"number\"')\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    if (!uploadId) {\n      throw new errors.InvalidArgumentError('uploadId cannot be empty')\n    }\n    var query = ''\n    if (marker && marker !== 0) {\n      query += `part-number-marker=${marker}&`\n    }\n    query += `uploadId=${uriEscape(uploadId)}`\n\n    var method = 'GET'\n    this.makeRequest({method, bucketName, objectName, query}, '', [200], '', true, (e, response) => {\n      if (e) return cb(e)\n      var transformer = transformers.getListPartsTransformer()\n      pipesetup(response, transformer)\n        .on('error', e => cb(e))\n        .on('data', data => cb(null, data))\n    })\n  }\n\n  // Called by listIncompleteUploads to fetch a batch of incomplete uploads.\n  listIncompleteUploadsQuery(bucketName, prefix, keyMarker, uploadIdMarker, delimiter) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isString(prefix)) {\n      throw new TypeError('prefix should be of type \"string\"')\n    }\n    if (!isString(keyMarker)) {\n      throw new TypeError('keyMarker should be of type \"string\"')\n    }\n    if (!isString(uploadIdMarker)) {\n      throw new TypeError('uploadIdMarker should be of type \"string\"')\n    }\n    if (!isString(delimiter)) {\n      throw new TypeError('delimiter should be of type \"string\"')\n    }\n    var queries = []\n    queries.push(`prefix=${uriEscape(prefix)}`)\n    queries.push(`delimiter=${uriEscape(delimiter)}`)\n\n    if (keyMarker) {\n      keyMarker = uriEscape(keyMarker)\n      queries.push(`key-marker=${keyMarker}`)\n    }\n    if (uploadIdMarker) {\n      queries.push(`upload-id-marker=${uploadIdMarker}`)\n    }\n\n    var maxUploads = 1000\n    queries.push(`max-uploads=${maxUploads}`)\n    queries.sort()\n    queries.unshift('uploads')\n    var query = ''\n    if (queries.length > 0) {\n      query = `${queries.join('&')}`\n    }\n    var method = 'GET'\n    var transformer = transformers.getListMultipartTransformer()\n    this.makeRequest({method, bucketName, query}, '', [200], '', true, (e, response) => {\n      if (e) return transformer.emit('error', e)\n      pipesetup(response, transformer)\n    })\n    return transformer\n  }\n\n  // Find uploadId of an incomplete upload.\n  findUploadId(bucketName, objectName, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('cb should be of type \"function\"')\n    }\n    var latestUpload\n    var listNext = (keyMarker, uploadIdMarker) => {\n      this.listIncompleteUploadsQuery(bucketName, objectName, keyMarker, uploadIdMarker, '')\n        .on('error', e => cb(e))\n        .on('data', result => {\n          result.uploads.forEach(upload => {\n            if (upload.key === objectName) {\n              if (!latestUpload ||\n                (upload.initiated.getTime() > latestUpload.initiated.getTime())) {\n                latestUpload = upload\n                return\n              }\n            }\n          })\n          if (result.isTruncated) {\n            listNext(result.nextKeyMarker, result.nextUploadIdMarker)\n            return\n          }\n          if (latestUpload) return cb(null, latestUpload.uploadId)\n          cb(null, undefined)\n        })\n    }\n    listNext('', '')\n  }\n\n  // Returns a function that can be used for uploading objects.\n  // If multipart === true, it returns function that is used to upload\n  // a part of the multipart.\n  getUploader(bucketName, objectName, metaData, multipart) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isBoolean(multipart)) {\n      throw new TypeError('multipart should be of type \"boolean\"')\n    }\n    if (!isObject(metaData)) {\n      throw new TypeError('metadata should be of type \"object\"')\n    }\n\n    var validate = (stream, length, sha256sum, md5sum, cb) => {\n      if (!isReadableStream(stream)) {\n        throw new TypeError('stream should be of type \"Stream\"')\n      }\n      if (!isNumber(length)) {\n        throw new TypeError('length should be of type \"number\"')\n      }\n      if (!isString(sha256sum)) {\n        throw new TypeError('sha256sum should be of type \"string\"')\n      }\n      if (!isString(md5sum)) {\n        throw new TypeError('md5sum should be of type \"string\"')\n      }\n      if (!isFunction(cb)) {\n        throw new TypeError('callback should be of type \"function\"')\n      }\n    }\n    var simpleUploader = (...args) => {\n      validate(...args)\n      var query = ''\n      upload(query, ...args)\n    }\n    var multipartUploader = (uploadId, partNumber, ...rest) => {\n      if (!isString(uploadId)) {\n        throw new TypeError('uploadId should be of type \"string\"')\n      }\n      if (!isNumber(partNumber)) {\n        throw new TypeError('partNumber should be of type \"number\"')\n      }\n      if (!uploadId) {\n        throw new errors.InvalidArgumentError('Empty uploadId')\n      }\n      if (!partNumber) {\n        throw new errors.InvalidArgumentError('partNumber cannot be 0')\n      }\n      validate(...rest)\n      var query = `partNumber=${partNumber}&uploadId=${uriEscape(uploadId)}`\n      upload(query, ...rest)\n    }\n    var upload = (query, stream, length, sha256sum, md5sum, cb) => {\n      var method = 'PUT'\n      let headers = {'Content-Length': length}\n\n      if (!multipart) {\n        headers = Object.assign({}, metaData, headers)\n      }\n\n      if (!this.enableSHA256) headers['Content-MD5'] = md5sum\n      this.makeRequestStream({method, bucketName, objectName, query, headers},\n                             stream, sha256sum, [200], '', true, (e, response) => {\n                               if (e) return cb(e)\n                               const result = {\n                                 etag: sanitizeETag(response.headers.etag),\n                                 versionId:getVersionId(response.headers)\n                               }\n                               // Ignore the 'data' event so that the stream closes. (nodejs stream requirement)\n                               response.on('data', () => {})\n                               cb(null, result)\n                             })\n    }\n    if (multipart) {\n      return multipartUploader\n    }\n    return simpleUploader\n  }\n\n  // Remove all the notification configurations in the S3 provider\n  setBucketNotification(bucketName, config, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isObject(config)) {\n      throw new TypeError('notification config should be of type \"Object\"')\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    var method = 'PUT'\n    var query = 'notification'\n    var builder = new xml2js.Builder({rootName:'NotificationConfiguration', renderOpts:{'pretty':false}, headless:true})\n    var payload = builder.buildObject(config)\n    this.makeRequest({method, bucketName, query}, payload, [200], '', false, cb)\n  }\n\n  removeAllBucketNotification(bucketName, cb) {\n    this.setBucketNotification(bucketName, new NotificationConfig(), cb)\n  }\n\n  // Return the list of notification configurations stored\n  // in the S3 provider\n  getBucketNotification(bucketName, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    var method = 'GET'\n    var query = 'notification'\n    this.makeRequest({method, bucketName, query}, '', [200], '', true, (e, response) => {\n      if (e) return cb(e)\n      var transformer = transformers.getBucketNotificationTransformer()\n      var bucketNotification\n      pipesetup(response, transformer)\n        .on('data', result => bucketNotification = result)\n        .on('error', e => cb(e))\n        .on('end', () => cb(null, bucketNotification))\n    })\n  }\n\n  // Listens for bucket notifications. Returns an EventEmitter.\n  listenBucketNotification(bucketName, prefix, suffix, events) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError(`Invalid bucket name: ${bucketName}`)\n    }\n    if (!isString(prefix)) {\n      throw new TypeError('prefix must be of type string')\n    }\n    if (!isString(suffix)) {\n      throw new TypeError('suffix must be of type string')\n    }\n    if (!isArray(events)) {\n      throw new TypeError('events must be of type Array')\n    }\n    let listener = new NotificationPoller(this, bucketName, prefix, suffix, events)\n    listener.start()\n\n    return listener\n  }\n\n  getBucketVersioning(bucketName,cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isFunction(cb)) {\n      throw new errors.InvalidArgumentError('callback should be of type \"function\"')\n    }\n    var method = 'GET'\n    var query = \"versioning\"\n\n    this.makeRequest({method, bucketName, query}, '', [200], '', true, (e, response) => {\n      if (e) return cb(e)\n\n      let versionConfig = Buffer.from('')\n      pipesetup(response, transformers.bucketVersioningTransformer())\n        .on('data', data => {\n          versionConfig = data\n        })\n        .on('error', cb)\n        .on('end', () => {\n          cb(null, versionConfig)\n        })\n    })\n  }\n\n  setBucketVersioning(bucketName,versionConfig, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if(!Object.keys(versionConfig).length){\n      throw new errors.InvalidArgumentError('versionConfig should be of type \"object\"')\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    var method = 'PUT'\n    var query = \"versioning\"\n    var builder = new xml2js.Builder({rootName:'VersioningConfiguration', renderOpts:{'pretty':false}, headless:true})\n    var payload = builder.buildObject(versionConfig)\n\n    this.makeRequest({method, bucketName, query}, payload, [200], '', false, cb)\n  }\n\n  /** To set Tags on a bucket or object based on the params\n     *  __Arguments__\n     * taggingParams _object_ Which contains the following properties\n     *  bucketName _string_,\n     *  objectName _string_ (Optional),\n     *  tags _object_ of the form {'<tag-key-1>':'<tag-value-1>','<tag-key-2>':'<tag-value-2>'}\n     *  putOpts _object_ (Optional) e.g {versionId:\"my-object-version-id\"},\n     *  cb(error)` _function_ - callback function with `err` as the error argument. `err` is null if the operation is successful.\n     */\n  setTagging(taggingParams){\n\n    const { bucketName, objectName, tags, putOpts={}, cb} = taggingParams\n    const method = 'PUT'\n    let query =\"tagging\"\n\n    if(putOpts && putOpts.versionId){\n      query =`${query}&versionId=${putOpts.versionId}`\n    }\n    const tagsList=[]\n    for (const [key, value] of Object.entries(tags)) {\n      tagsList.push( { Key: key, Value: value} )\n    }\n    const taggingConfig = {\n      Tagging: {\n        TagSet: {\n          Tag: tagsList\n        }\n      }\n    }\n    const encoder = new TextEncoder()\n    const headers ={}\n    const builder = new xml2js.Builder({ headless:true,renderOpts:{'pretty':false},})\n    let payload = builder.buildObject(taggingConfig)\n    payload = encoder.encode(payload)\n    headers['Content-MD5'] = toMd5(payload)\n    const requestOptions = { method, bucketName, query, headers }\n\n    if(objectName){\n      requestOptions['objectName']=objectName\n    }\n    headers['Content-MD5'] = toMd5(payload)\n\n    this.makeRequest(requestOptions, payload, [200], '', false, cb)\n\n  }\n\n  /** Set Tags on a Bucket\n   * __Arguments__\n   * bucketName _string_\n   * tags _object_ of the form {'<tag-key-1>':'<tag-value-1>','<tag-key-2>':'<tag-value-2>'}\n   * `cb(error)` _function_ - callback function with `err` as the error argument. `err` is null if the operation is successful.\n   */\n  setBucketTagging(bucketName,tags,cb){\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if(!isObject(tags)){\n      throw new errors.InvalidArgumentError('tags should be of type \"object\"')\n    }\n    if(Object.keys(tags).length > 10){\n      throw new errors.InvalidArgumentError('maximum tags allowed is 10\"')\n    }\n    if (!isFunction(cb)) {\n      throw new errors.InvalidArgumentError('callback should be of type \"function\"')\n    }\n\n    return this.setTagging({bucketName, tags, cb})\n  }\n\n  /** Set Tags on an Object\n   * __Arguments__\n   * bucketName _string_\n   * objectName _string_\n   *  * tags _object_ of the form {'<tag-key-1>':'<tag-value-1>','<tag-key-2>':'<tag-value-2>'}\n   *  putOpts _object_ (Optional) e.g {versionId:\"my-object-version-id\"},\n   * `cb(error)` _function_ - callback function with `err` as the error argument. `err` is null if the operation is successful.\n   */\n  setObjectTagging(bucketName, objectName, tags, putOpts={}, cb){\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidBucketNameError('Invalid object name: ' + objectName)\n    }\n\n    if(isFunction(putOpts)){\n      cb=putOpts\n      putOpts={}\n    }\n\n    if(!isObject(tags)){\n      throw new errors.InvalidArgumentError('tags should be of type \"object\"')\n    }\n    if(Object.keys(tags).length > 10){\n      throw new errors.InvalidArgumentError('Maximum tags allowed is 10\"')\n    }\n\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    return this.setTagging({bucketName, objectName, tags, putOpts, cb})\n  }\n\n  /** Remove Tags on an Bucket/Object based on params\n   * __Arguments__\n   * bucketName _string_\n   * objectName _string_ (optional)\n   * removeOpts _object_ (Optional) e.g {versionId:\"my-object-version-id\"},\n   * `cb(error)` _function_ - callback function with `err` as the error argument. `err` is null if the operation is successful.\n   */\n  removeTagging({bucketName, objectName, removeOpts, cb}){\n    const method = 'DELETE'\n    let query =\"tagging\"\n\n    if (removeOpts && Object.keys(removeOpts).length && removeOpts.versionId) {\n      query =`${query}&versionId=${removeOpts.versionId}`\n    }\n    const requestOptions = { method, bucketName, objectName, query }\n\n    if (objectName) {\n      requestOptions['objectName'] = objectName\n    }\n    this.makeRequest(requestOptions, '', [200, 204], '', true, cb)\n  }\n\n  /** Remove Tags associated with a bucket\n   *  __Arguments__\n   * bucketName _string_\n   * `cb(error)` _function_ - callback function with `err` as the error argument. `err` is null if the operation is successful.\n   */\n  removeBucketTagging(bucketName, cb){\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n    return this.removeTagging({bucketName, cb})\n  }\n\n  /** Remove tags associated with an object\n   * __Arguments__\n   * bucketName _string_\n   * objectName _string_\n   * removeOpts _object_ (Optional) e.g. {VersionID:\"my-object-version-id\"}\n   * `cb(error)` _function_ - callback function with `err` as the error argument. `err` is null if the operation is successful.\n   */\n  removeObjectTagging(bucketName, objectName, removeOpts, cb){\n\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidBucketNameError('Invalid object name: ' + objectName)\n    }\n    if(isFunction(removeOpts)){\n      cb=removeOpts\n      removeOpts={}\n    }\n    if(removeOpts && Object.keys(removeOpts).length && !isObject(removeOpts)){\n      throw new errors.InvalidArgumentError('removeOpts should be of type \"object\"')\n    }\n\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    return this.removeTagging({bucketName, objectName, removeOpts, cb})\n  }\n\n  /** Get Tags associated with a Bucket\n   *  __Arguments__\n   * bucketName _string_\n   * `cb(error, tags)` _function_ - callback function with `err` as the error argument. `err` is null if the operation is successful.\n   */\n  getBucketTagging(bucketName, cb){\n    const method = 'GET'\n    const query =\"tagging\"\n    const requestOptions = { method, bucketName, query }\n\n    this.makeRequest(requestOptions, '', [200], '', true, (e, response) => {\n      var transformer = transformers.getTagsTransformer()\n      if (e) return cb(e)\n      let tagsList\n      pipesetup(response, transformer)\n        .on('data', result => tagsList = result)\n        .on('error', e => cb(e))\n        .on('end', () => cb(null, tagsList))\n    })\n  }\n\n  /** Get the tags associated with a bucket OR an object\n   * bucketName _string_\n   * objectName _string_ (Optional)\n   * getOpts _object_ (Optional) e.g {versionId:\"my-object-version-id\"}\n   * `cb(error, tags)` _function_ - callback function with `err` as the error argument. `err` is null if the operation is successful.\n   */\n  getObjectTagging(bucketName, objectName, getOpts={}, cb=()=>false){\n    const method = 'GET'\n    let query =\"tagging\"\n\n    if(!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if(!isValidObjectName(objectName)) {\n      throw new errors.InvalidBucketNameError('Invalid object name: ' + objectName)\n    }\n    if(isFunction(getOpts)){\n      cb=getOpts\n      getOpts={}\n    }\n    if(!isObject(getOpts)){\n      throw new errors.InvalidArgumentError('getOpts should be of type \"object\"')\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    if(getOpts && getOpts.versionId){\n      query =`${query}&versionId=${getOpts.versionId}`\n    }\n    const requestOptions = { method, bucketName, query }\n    if(objectName){\n      requestOptions['objectName']=objectName\n    }\n\n    this.makeRequest(requestOptions, '', [200], '', true, (e, response) => {\n      const transformer = transformers.getTagsTransformer()\n      if (e) return cb(e)\n      let tagsList\n      pipesetup(response, transformer)\n        .on('data', result => tagsList = result)\n        .on('error', e => cb(e))\n        .on('end', () => cb(null, tagsList))\n    })\n\n  }\n\n  /** Put lifecycle configuration on a bucket.\n  /** Apply lifecycle configuration on a bucket.\n   * bucketName _string_\n   * policyConfig _object_ a valid policy configuration object.\n   * `cb(error)` _function_ - callback function with `err` as the error argument. `err` is null if the operation is successful.\n   */\n  applyBucketLifecycle(bucketName, policyConfig, cb){\n    const method = 'PUT'\n    const query=\"lifecycle\"\n\n    const encoder = new TextEncoder()\n    const headers ={}\n    const builder = new xml2js.Builder({ rootName:'LifecycleConfiguration', headless:true, renderOpts:{'pretty':false},})\n    let payload = builder.buildObject(policyConfig)\n    payload = encoder.encode(payload)\n    const requestOptions = { method, bucketName, query, headers }\n    headers['Content-MD5'] = toMd5(payload)\n\n    this.makeRequest(requestOptions, payload, [200], '', false, cb)\n  }\n\n  /** Remove lifecycle configuration of a bucket.\n   * bucketName _string_\n   * `cb(error)` _function_ - callback function with `err` as the error argument. `err` is null if the operation is successful.\n   */\n  removeBucketLifecycle(bucketName, cb){\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    const method = 'DELETE'\n    const query=\"lifecycle\"\n    this.makeRequest({method, bucketName, query}, '', [204], '', false, cb)\n  }\n\n  /** Set/Override lifecycle configuration on a bucket. if the configuration is empty, it removes the configuration.\n   * bucketName _string_\n   * lifeCycleConfig _object_ one of the following values: (null or '') to remove the lifecycle configuration. or a valid lifecycle configuration\n   * `cb(error)` _function_ - callback function with `err` as the error argument. `err` is null if the operation is successful.\n   */\n  setBucketLifecycle(bucketName, lifeCycleConfig=null, cb){\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if(_.isEmpty(lifeCycleConfig)){\n      this.removeBucketLifecycle(bucketName, cb)\n    }else {\n      this.applyBucketLifecycle(bucketName, lifeCycleConfig, cb)\n    }\n  }\n\n  /** Get lifecycle configuration on a bucket.\n   * bucketName _string_\n   * `cb(config)` _function_ - callback function with lifecycle configuration as the error argument.\n   */\n  getBucketLifecycle(bucketName, cb){\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    const method = 'GET'\n    const query =\"lifecycle\"\n    const requestOptions = { method, bucketName, query }\n\n    this.makeRequest(requestOptions, '', [200], '', true, (e, response) => {\n      const transformer = transformers.lifecycleTransformer()\n      if (e) return cb(e)\n      let lifecycleConfig\n      pipesetup(response, transformer)\n        .on('data', result => lifecycleConfig = result)\n        .on('error', e => cb(e))\n        .on('end', () => cb(null, lifecycleConfig))\n    })\n\n  }\n\n  setObjectLockConfig(bucketName, lockConfigOpts={}, cb) {\n\n    const retentionModes = [RETENTION_MODES.COMPLIANCE, RETENTION_MODES.GOVERNANCE]\n    const validUnits = [RETENTION_VALIDITY_UNITS.DAYS, RETENTION_VALIDITY_UNITS.YEARS]\n\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n\n    if (lockConfigOpts.mode && !retentionModes.includes(lockConfigOpts.mode)) {\n      throw new TypeError(`lockConfigOpts.mode should be one of ${retentionModes}`)\n    }\n    if (lockConfigOpts.unit && !validUnits.includes(lockConfigOpts.unit)){\n      throw new TypeError(`lockConfigOpts.unit should be one of ${validUnits}`)\n    }\n    if (lockConfigOpts.validity && !isNumber(lockConfigOpts.validity)){\n      throw new TypeError(`lockConfigOpts.validity should be a number`)\n    }\n\n    const method = 'PUT'\n    const query = \"object-lock\"\n\n    let config={\n      ObjectLockEnabled:\"Enabled\"\n    }\n    const configKeys = Object.keys(lockConfigOpts)\n    // Check if keys are present and all keys are present.\n    if(configKeys.length > 0){\n      if(_.difference(configKeys, ['unit','mode','validity']).length !== 0){\n        throw new TypeError(`lockConfigOpts.mode,lockConfigOpts.unit,lockConfigOpts.validity all the properties should be specified.`)\n      } else {\n        config.Rule={\n          DefaultRetention:{}\n        }\n        if (lockConfigOpts.mode) {\n          config.Rule.DefaultRetention.Mode = lockConfigOpts.mode\n        }\n        if (lockConfigOpts.unit === RETENTION_VALIDITY_UNITS.DAYS) {\n          config.Rule.DefaultRetention.Days = lockConfigOpts.validity\n        } else if (lockConfigOpts.unit === RETENTION_VALIDITY_UNITS.YEARS) {\n          config.Rule.DefaultRetention.Years = lockConfigOpts.validity\n        }\n      }\n    }\n\n    const builder = new xml2js.Builder({rootName:'ObjectLockConfiguration', renderOpts:{'pretty':false}, headless:true})\n    const payload = builder.buildObject(config)\n\n    const headers = {}\n    headers['Content-MD5'] =toMd5(payload)\n\n    this.makeRequest({method, bucketName, query, headers}, payload, [200], '', false, cb)\n  }\n\n  getObjectLockConfig(bucketName, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isFunction(cb)) {\n      throw new errors.InvalidArgumentError('callback should be of type \"function\"')\n    }\n    const method = 'GET'\n    const query = \"object-lock\"\n\n    this.makeRequest({method, bucketName, query}, '', [200], '', true, (e, response) => {\n      if (e) return cb(e)\n\n      let objectLockConfig = Buffer.from('')\n      pipesetup(response, transformers.objectLockTransformer())\n        .on('data', data => {\n          objectLockConfig = data\n        })\n        .on('error', cb)\n        .on('end', () => {\n          cb(null, objectLockConfig)\n        })\n    })\n  }\n\n  putObjectRetention(bucketName, objectName, retentionOpts={}, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if (!isObject(retentionOpts)) {\n      throw new errors.InvalidArgumentError('retentionOpts should be of type \"object\"')\n    } else {\n      if (retentionOpts.governanceBypass && !isBoolean(retentionOpts.governanceBypass)) {\n        throw new errors.InvalidArgumentError('Invalid value for governanceBypass',retentionOpts.governanceBypass)\n      }\n      if (retentionOpts.mode && ![RETENTION_MODES.COMPLIANCE,RETENTION_MODES.GOVERNANCE].includes((retentionOpts.mode))) {\n        throw new errors.InvalidArgumentError('Invalid object retention mode ', retentionOpts.mode)\n      }\n      if (retentionOpts.retainUntilDate && !isString(retentionOpts.retainUntilDate)) {\n        throw new errors.InvalidArgumentError('Invalid value for retainUntilDate',retentionOpts.retainUntilDate)\n      }\n      if (retentionOpts.versionId && !isString(retentionOpts.versionId)) {\n        throw new errors.InvalidArgumentError('Invalid value for versionId',retentionOpts.versionId)\n      }\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    const method = 'PUT'\n    let query = \"retention\"\n\n    const headers = {}\n    if(retentionOpts.governanceBypass){\n      headers[\"X-Amz-Bypass-Governance-Retention\"]=true\n    }\n\n    const builder = new xml2js.Builder({rootName:'Retention', renderOpts:{'pretty':false}, headless:true})\n    const params ={}\n\n    if(retentionOpts.mode){\n      params.Mode =retentionOpts.mode\n    }\n    if(retentionOpts.retainUntilDate){\n      params.RetainUntilDate =retentionOpts.retainUntilDate\n    }\n    if(retentionOpts.versionId){\n      query += `&versionId=${retentionOpts.versionId}`\n    }\n\n    let payload = builder.buildObject(params)\n\n    headers['Content-MD5'] = toMd5(payload)\n    this.makeRequest({method, bucketName, objectName, query, headers}, payload, [200, 204], '', false, cb)\n  }\n\n  getObjectRetention(bucketName ,objectName, getOpts, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n    if(!isObject(getOpts)){\n      throw new errors.InvalidArgumentError('callback should be of type \"object\"')\n    }else if(getOpts.versionId && !isString(getOpts.versionId)){\n      throw new errors.InvalidArgumentError('VersionID should be of type \"string\"')\n    }\n    if (cb && !isFunction(cb)) {\n      throw new errors.InvalidArgumentError('callback should be of type \"function\"')\n    }\n    const method = 'GET'\n    let query = \"retention\"\n    if(getOpts.versionId){\n      query += `&versionId=${getOpts.versionId}`\n    }\n\n    this.makeRequest({method, bucketName,objectName, query}, '', [200], '', true, (e, response) => {\n      if (e) return cb(e)\n\n      let retentionConfig = Buffer.from('')\n      pipesetup(response, transformers.objectRetentionTransformer())\n        .on('data', data => {\n          retentionConfig = data\n        })\n        .on('error', cb)\n        .on('end', () => {\n          cb(null, retentionConfig)\n        })\n    })\n  }\n\n\n  setBucketEncryption(bucketName, encryptionConfig, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n\n    if(isFunction(encryptionConfig)){\n      cb= encryptionConfig\n      encryptionConfig = null\n    }\n\n    if(!_.isEmpty(encryptionConfig) && encryptionConfig.Rule.length >1){\n      throw new errors.InvalidArgumentError('Invalid Rule length. Only one rule is allowed.: ' + encryptionConfig.Rule)\n    }\n    if (cb && !isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    let encryptionObj =encryptionConfig\n    if(_.isEmpty(encryptionConfig)) {\n      encryptionObj={\n      // Default MinIO Server Supported Rule\n        Rule:[\n          {\n            ApplyServerSideEncryptionByDefault: {\n              SSEAlgorithm:\"AES256\"\n            }\n          }\n        ]\n\n      }}\n\n    let method = 'PUT'\n    let query = \"encryption\"\n    let builder = new xml2js.Builder({rootName:'ServerSideEncryptionConfiguration', renderOpts:{'pretty':false}, headless:true})\n    let payload = builder.buildObject(encryptionObj)\n\n    const headers = {}\n    headers['Content-MD5'] =toMd5(payload)\n\n    this.makeRequest({method, bucketName, query,headers}, payload, [200], '', false, cb)\n  }\n\n  getBucketEncryption(bucketName, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isFunction(cb)) {\n      throw new errors.InvalidArgumentError('callback should be of type \"function\"')\n    }\n    const method = 'GET'\n    const query = \"encryption\"\n\n    this.makeRequest({method, bucketName, query}, '', [200], '', true, (e, response) => {\n      if (e) return cb(e)\n\n      let bucketEncConfig = Buffer.from('')\n      pipesetup(response, transformers.bucketEncryptionTransformer())\n        .on('data', data => {\n          bucketEncConfig = data\n        })\n        .on('error', cb)\n        .on('end', () => {\n          cb(null, bucketEncConfig)\n        })\n    })\n  }\n  removeBucketEncryption(bucketName, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isFunction(cb)) {\n      throw new errors.InvalidArgumentError('callback should be of type \"function\"')\n    }\n    const method = 'DELETE'\n    const query = \"encryption\"\n\n    this.makeRequest({method, bucketName, query}, '', [204], '', false, cb)\n  }\n\n\n  setBucketReplication(bucketName, replicationConfig={}, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isObject(replicationConfig)) {\n      throw new errors.InvalidArgumentError('replicationConfig should be of type \"object\"')\n    } else {\n      if (_.isEmpty(replicationConfig.role)) {\n        throw new errors.InvalidArgumentError('Role cannot be empty')\n      }else if (replicationConfig.role && !isString(replicationConfig.role)) {\n        throw new errors.InvalidArgumentError('Invalid value for role', replicationConfig.role)\n      }\n      if (_.isEmpty(replicationConfig.rules)) {\n        throw new errors.InvalidArgumentError('Minimum one replication rule must be specified')\n      }\n    }\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    const method = 'PUT'\n    let query = \"replication\"\n    const headers = {}\n\n    const replicationParamsConfig = {\n      ReplicationConfiguration: {\n        Role: replicationConfig.role,\n        Rule: replicationConfig.rules\n      }\n    }\n\n    const builder =  new xml2js.Builder({ renderOpts:{'pretty':false},headless: true })\n\n    let payload = builder.buildObject(replicationParamsConfig)\n\n    headers['Content-MD5'] =toMd5(payload)\n\n    this.makeRequest({method, bucketName,  query, headers}, payload, [200], '', false, cb)\n  }\n\n  getBucketReplication(bucketName, cb) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isFunction(cb)) {\n      throw new errors.InvalidArgumentError('callback should be of type \"function\"')\n    }\n    const method = 'GET'\n    const query = \"replication\"\n\n    this.makeRequest({method, bucketName, query}, '', [200], '', true, (e, response) => {\n      if (e) return cb(e)\n\n      let replicationConfig = Buffer.from('')\n      pipesetup(response, transformers.replicationConfigTransformer())\n        .on('data', data => {\n          replicationConfig = data\n        })\n        .on('error', cb)\n        .on('end', () => {\n          cb(null, replicationConfig)\n        })\n    })\n  }\n\n  removeBucketReplication(bucketName, cb){\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    const method = 'DELETE'\n    const query=\"replication\"\n    this.makeRequest({method, bucketName, query}, '', [200, 204], '', false, cb)\n  }\n\n\n  getObjectLegalHold(bucketName, objectName, getOpts={}, cb){\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n\n    if(isFunction(getOpts)){\n      cb= getOpts\n      getOpts = {}\n    }\n\n    if (!isObject(getOpts))  {\n      throw new TypeError('getOpts should be of type \"Object\"')\n    } else if(Object.keys(getOpts).length> 0 && getOpts.versionId && !isString((getOpts.versionId))){\n      throw new TypeError('versionId should be of type string.:',getOpts.versionId )\n    }\n\n\n    if (!isFunction(cb)) {\n      throw new errors.InvalidArgumentError('callback should be of type \"function\"')\n    }\n\n    const method = 'GET'\n    let query = \"legal-hold\"\n\n    if (getOpts.versionId){\n      query +=`&versionId=${getOpts.versionId}`\n    }\n\n    this.makeRequest({method, bucketName, objectName, query}, '', [200], '', true, (e, response) => {\n      if (e) return cb(e)\n\n      let legalHoldConfig = Buffer.from('')\n      pipesetup(response, transformers.objectLegalHoldTransformer())\n        .on('data', data => {\n          legalHoldConfig = data\n        })\n        .on('error', cb)\n        .on('end', () => {\n          cb(null, legalHoldConfig)\n        })\n    })\n\n  }\n\n  setObjectLegalHold(bucketName, objectName, setOpts={}, cb){\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError('Invalid bucket name: ' + bucketName)\n    }\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name: ${objectName}`)\n    }\n\n    const defaultOpts = {\n      status:LEGAL_HOLD_STATUS.ENABLED\n    }\n    if(isFunction(setOpts)){\n      cb= setOpts\n      setOpts =defaultOpts\n    }\n\n    if (!isObject(setOpts)) {\n      throw new TypeError('setOpts should be of type \"Object\"')\n    }else {\n\n      if(![LEGAL_HOLD_STATUS.ENABLED, LEGAL_HOLD_STATUS.DISABLED].includes((setOpts.status))){\n        throw new TypeError('Invalid status: '+setOpts.status )\n      }\n      if(setOpts.versionId && !setOpts.versionId.length){\n        throw new TypeError('versionId should be of type string.:'+ setOpts.versionId )\n      }\n    }\n\n    if (!isFunction(cb)) {\n      throw new errors.InvalidArgumentError('callback should be of type \"function\"')\n    }\n\n    if( _.isEmpty(setOpts)){\n      setOpts={\n        defaultOpts\n      }\n    }\n\n    const method = 'PUT'\n    let query = \"legal-hold\"\n\n    if (setOpts.versionId){\n      query +=`&versionId=${setOpts.versionId}`\n    }\n\n    let config={\n      Status: setOpts.status\n    }\n\n    const builder = new xml2js.Builder({rootName:'LegalHold', renderOpts:{'pretty':false}, headless:true})\n    const payload = builder.buildObject(config)\n    const headers = {}\n    headers['Content-MD5'] = toMd5(payload)\n\n    this.makeRequest({method, bucketName, objectName, query, headers}, payload, [200], '', false, cb)\n  }\n\n  /**\n     * Internal Method to abort a multipart upload request in case of any errors.\n     * @param bucketName __string__ Bucket Name\n     * @param objectName __string__ Object Name\n     * @param uploadId __string__ id of a multipart upload to cancel during compose object sequence.\n     * @param cb __function__ callback function\n     */\n  abortMultipartUpload(bucketName, objectName, uploadId, cb){\n    const method = 'DELETE'\n    let query =`uploadId=${uploadId}`\n\n    const requestOptions = { method, bucketName, objectName:objectName, query }\n    this.makeRequest(requestOptions, '', [204], '', false, cb)\n  }\n\n  /**\n     * Internal method to upload a part during compose object.\n     * @param partConfig __object__ contains the following.\n     *    bucketName __string__\n     *    objectName __string__\n     *    uploadID __string__\n     *    partNumber __number__\n     *    headers __object__\n     * @param cb called with null incase of error.\n     */\n  uploadPartCopy  (partConfig , cb) {\n    const {\n      bucketName, objectName, uploadID, partNumber , headers\n    } = partConfig\n\n    const method = 'PUT'\n    let query =`uploadId=${uploadID}&partNumber=${partNumber}`\n    const requestOptions = { method, bucketName, objectName:objectName, query, headers }\n    return this.makeRequest(requestOptions, '', [200], '', true,(e, response) => {\n      let partCopyResult = Buffer.from('')\n      if (e) return cb(e)\n      pipesetup(response, transformers.uploadPartTransformer())\n        .on('data', data => {\n          partCopyResult = data\n        })\n        .on('error', cb)\n        .on('end', () => {\n          let uploadPartCopyRes = {\n            etag:sanitizeETag(partCopyResult.ETag),\n            key:objectName,\n            part:partNumber\n          }\n\n          cb(null, uploadPartCopyRes)\n        })\n    }\n    )\n  }\n\n  composeObject (destObjConfig={}, sourceObjList=[], cb){\n    const me = this // many async flows. so store the ref.\n    const sourceFilesLength = sourceObjList.length\n\n    if(!(isArray(sourceObjList ))){\n      throw new errors.InvalidArgumentError('sourceConfig should an array of CopySourceOptions ')\n    }\n    if(!(destObjConfig instanceof CopyDestinationOptions )){\n      throw new errors.InvalidArgumentError('destConfig should of type CopyDestinationOptions ')\n    }\n\n    if (sourceFilesLength < 1 || sourceFilesLength > PART_CONSTRAINTS.MAX_PARTS_COUNT) {\n      throw new errors.InvalidArgumentError(`\"There must be as least one and up to ${PART_CONSTRAINTS.MAX_PARTS_COUNT} source objects.`)\n    }\n\n    if (!isFunction(cb)) {\n      throw new TypeError('callback should be of type \"function\"')\n    }\n\n    for(let i=0;i<sourceFilesLength;i++){\n      if(!sourceObjList[i].validate()){\n        return false\n      }\n    }\n\n    if(!destObjConfig.validate()){\n      return false\n    }\n\n    const getStatOptions = (srcConfig) =>{\n      return {\n        versionId: srcConfig.VersionID\n      }\n    }\n    const srcObjectSizes=[]\n    let totalSize=0\n    let totalParts=0\n\n    const sourceObjStats = sourceObjList.map( (srcItem) =>  me.statObject(srcItem.Bucket, srcItem.Object, getStatOptions(srcItem))  )\n\n    return  Promise.all(sourceObjStats).then(srcObjectInfos =>{\n\n      const validatedStats =  srcObjectInfos.map( (resItemStat, index)=>{\n\n        const srcConfig = sourceObjList[index]\n\n        let srcCopySize =resItemStat.size\n        // Check if a segment is specified, and if so, is the\n        // segment within object bounds?\n        if (srcConfig.MatchRange) {\n          // Since range is specified,\n          //    0 <= src.srcStart <= src.srcEnd\n          // so only invalid case to check is:\n          const srcStart = srcConfig.Start\n          const srcEnd = srcConfig.End\n          if (srcEnd >= srcCopySize || srcStart < 0 ){\n            throw new errors.InvalidArgumentError(`CopySrcOptions ${index} has invalid segment-to-copy [${srcStart}, ${srcEnd}] (size is ${srcCopySize})`)\n          }\n          srcCopySize = srcEnd - srcStart + 1\n        }\n\n        // Only the last source may be less than `absMinPartSize`\n        if (srcCopySize < PART_CONSTRAINTS.ABS_MIN_PART_SIZE && index < sourceFilesLength-1) {\n          throw new errors.InvalidArgumentError(`CopySrcOptions ${index} is too small (${srcCopySize}) and it is not the last part.`)\n        }\n\n        // Is data to copy too large?\n        totalSize += srcCopySize\n        if (totalSize > PART_CONSTRAINTS.MAX_MULTIPART_PUT_OBJECT_SIZE) {\n          throw new errors.InvalidArgumentError(`Cannot compose an object of size ${totalSize} (> 5TiB)`)\n        }\n\n        // record source size\n        srcObjectSizes[index] = srcCopySize\n\n        // calculate parts needed for current source\n        totalParts += partsRequired(srcCopySize)\n        // Do we need more parts than we are allowed?\n        if (totalParts > PART_CONSTRAINTS.MAX_PARTS_COUNT  ){\n          throw new errors.InvalidArgumentError(`Your proposed compose object requires more than ${PART_CONSTRAINTS.MAX_PARTS_COUNT} parts`)\n        }\n\n        return resItemStat\n\n      })\n\n      if ((totalParts === 1 && totalSize <= PART_CONSTRAINTS.MAX_PART_SIZE) || (totalSize === 0)) {\n        return this.copyObject( sourceObjList[0], destObjConfig, cb) // use copyObjectV2\n      }\n\n      // preserve etag to avoid modification of object while copying.\n      for(let i=0;i<sourceFilesLength;i++){\n        sourceObjList[i].MatchETag = validatedStats[i].etag\n      }\n\n      const splitPartSizeList = validatedStats.map((resItemStat, idx)=>{\n        const calSize = calculateEvenSplits(srcObjectSizes[idx], sourceObjList[idx])\n        return calSize\n\n      })\n\n      function getUploadPartConfigList (uploadId) {\n        const uploadPartConfigList = []\n\n        splitPartSizeList.forEach((splitSize, splitIndex) => {\n\n          const {\n            startIndex: startIdx,\n            endIndex: endIdx,\n            objInfo: objConfig,\n          } = splitSize\n\n          let partIndex = splitIndex + 1 // part index starts from 1.\n          const totalUploads = Array.from(startIdx)\n\n          const headers = sourceObjList[splitIndex].getHeaders()\n\n          totalUploads.forEach((splitStart, upldCtrIdx) => {\n            let splitEnd = endIdx[upldCtrIdx]\n\n            const sourceObj = `${objConfig.Bucket}/${objConfig.Object}`\n            headers['x-amz-copy-source'] = `${sourceObj}`\n            headers[\"x-amz-copy-source-range\"] = `bytes=${splitStart}-${splitEnd}`\n\n            const uploadPartConfig = {\n              bucketName: destObjConfig.Bucket,\n              objectName: destObjConfig.Object,\n              uploadID: uploadId,\n              partNumber: partIndex,\n              headers: headers,\n              sourceObj: sourceObj\n            }\n\n            uploadPartConfigList.push(uploadPartConfig)\n          })\n\n        })\n\n        return uploadPartConfigList\n      }\n\n      const performUploadParts = (uploadId) =>{\n\n        const uploadList = getUploadPartConfigList(uploadId)\n\n        async.map(uploadList, me.uploadPartCopy.bind(me), (err, res)=>{\n          if(err){\n            return this.abortMultipartUpload(destObjConfig.Bucket, destObjConfig.Object, uploadId, cb)\n          }\n          const partsDone = res.map((partCopy)=>({etag:partCopy.etag, part:partCopy.part}))\n          return me.completeMultipartUpload(destObjConfig.Bucket, destObjConfig.Object, uploadId, partsDone, cb)\n        })\n\n      }\n\n      const newUploadHeaders = destObjConfig.getHeaders()\n\n      me.initiateNewMultipartUpload(destObjConfig.Bucket, destObjConfig.Object, newUploadHeaders, (err, uploadId)=>{\n        if(err){\n          return cb(err, null)\n        }\n        performUploadParts(uploadId)\n      })\n\n    })\n      .catch((error)=>{\n        cb(error, null)\n      })\n\n  }\n  get extensions() {\n    if(!this.clientExtensions)\n    {\n      this.clientExtensions = new extensions(this)\n    }\n    return this.clientExtensions\n  }\n}\n\n// Promisify various public-facing APIs on the Client module.\nClient.prototype.makeBucket = promisify(Client.prototype.makeBucket)\nClient.prototype.listBuckets = promisify(Client.prototype.listBuckets)\nClient.prototype.bucketExists = promisify(Client.prototype.bucketExists)\nClient.prototype.removeBucket = promisify(Client.prototype.removeBucket)\n\nClient.prototype.getObject = promisify(Client.prototype.getObject)\nClient.prototype.getPartialObject = promisify(Client.prototype.getPartialObject)\nClient.prototype.fGetObject = promisify(Client.prototype.fGetObject)\nClient.prototype.putObject = promisify(Client.prototype.putObject)\nClient.prototype.fPutObject = promisify(Client.prototype.fPutObject)\nClient.prototype.copyObject = promisify(Client.prototype.copyObject)\nClient.prototype.statObject = promisify(Client.prototype.statObject)\nClient.prototype.removeObject = promisify(Client.prototype.removeObject)\nClient.prototype.removeObjects = promisify(Client.prototype.removeObjects)\n\nClient.prototype.presignedUrl = promisify(Client.prototype.presignedUrl)\nClient.prototype.presignedGetObject = promisify(Client.prototype.presignedGetObject)\nClient.prototype.presignedPutObject = promisify(Client.prototype.presignedPutObject)\nClient.prototype.presignedPostPolicy = promisify(Client.prototype.presignedPostPolicy)\nClient.prototype.getBucketNotification = promisify(Client.prototype.getBucketNotification)\nClient.prototype.setBucketNotification = promisify(Client.prototype.setBucketNotification)\nClient.prototype.removeAllBucketNotification = promisify(Client.prototype.removeAllBucketNotification)\nClient.prototype.getBucketPolicy = promisify(Client.prototype.getBucketPolicy)\nClient.prototype.setBucketPolicy = promisify(Client.prototype.setBucketPolicy)\nClient.prototype.removeIncompleteUpload = promisify(Client.prototype.removeIncompleteUpload)\nClient.prototype.getBucketVersioning = promisify(Client.prototype.getBucketVersioning)\nClient.prototype.setBucketVersioning=promisify(Client.prototype.setBucketVersioning)\nClient.prototype.setBucketTagging=promisify(Client.prototype.setBucketTagging)\nClient.prototype.removeBucketTagging=promisify(Client.prototype.removeBucketTagging)\nClient.prototype.getBucketTagging=promisify(Client.prototype.getBucketTagging)\nClient.prototype.setObjectTagging=promisify(Client.prototype.setObjectTagging)\nClient.prototype.removeObjectTagging=promisify(Client.prototype.removeObjectTagging)\nClient.prototype.getObjectTagging=promisify(Client.prototype.getObjectTagging)\nClient.prototype.setBucketLifecycle=promisify(Client.prototype.setBucketLifecycle)\nClient.prototype.getBucketLifecycle=promisify(Client.prototype.getBucketLifecycle)\nClient.prototype.removeBucketLifecycle=promisify(Client.prototype.removeBucketLifecycle)\nClient.prototype.setObjectLockConfig=promisify(Client.prototype.setObjectLockConfig)\nClient.prototype.getObjectLockConfig=promisify(Client.prototype.getObjectLockConfig)\nClient.prototype.putObjectRetention =promisify(Client.prototype.putObjectRetention)\nClient.prototype.getObjectRetention =promisify(Client.prototype.getObjectRetention)\nClient.prototype.setBucketEncryption = promisify(Client.prototype.setBucketEncryption)\nClient.prototype.getBucketEncryption = promisify(Client.prototype.getBucketEncryption)\nClient.prototype.removeBucketEncryption = promisify(Client.prototype.removeBucketEncryption)\nClient.prototype.setBucketReplication =promisify(Client.prototype.setBucketReplication)\nClient.prototype.getBucketReplication =promisify(Client.prototype.getBucketReplication)\nClient.prototype.removeBucketReplication=promisify(Client.prototype.removeBucketReplication)\nClient.prototype.setObjectLegalHold=promisify(Client.prototype.setObjectLegalHold)\nClient.prototype.getObjectLegalHold=promisify(Client.prototype.getObjectLegalHold)\nClient.prototype.composeObject = promisify(Client.prototype.composeObject)\n\nexport class CopyConditions {\n  constructor() {\n    this.modified = \"\"\n    this.unmodified = \"\"\n    this.matchETag = \"\"\n    this.matchETagExcept = \"\"\n  }\n\n  setModified(date) {\n    if (!(date instanceof Date))\n      throw new TypeError('date must be of type Date')\n\n    this.modified = date.toUTCString()\n  }\n\n  setUnmodified(date) {\n    if (!(date instanceof Date))\n      throw new TypeError('date must be of type Date')\n\n    this.unmodified = date.toUTCString()\n  }\n\n  setMatchETag(etag) {\n    this.matchETag = etag\n  }\n\n  setMatchETagExcept(etag) {\n    this.matchETagExcept = etag\n  }\n}\n\n// Build PostPolicy object that can be signed by presignedPostPolicy\nexport class PostPolicy {\n  constructor() {\n    this.policy = {\n      conditions: []\n    }\n    this.formData = {}\n  }\n\n  // set expiration date\n  setExpires(date) {\n    if (!date) {\n      throw new errors.InvalidDateError('Invalid date : cannot be null')\n    }\n    this.policy.expiration = date.toISOString()\n  }\n\n  // set object name\n  setKey(objectName) {\n    if (!isValidObjectName(objectName)) {\n      throw new errors.InvalidObjectNameError(`Invalid object name : ${objectName}`)\n    }\n    this.policy.conditions.push(['eq', '$key', objectName])\n    this.formData.key = objectName\n  }\n\n  // set object name prefix, i.e policy allows any keys with this prefix\n  setKeyStartsWith(prefix) {\n    if (!isValidPrefix(prefix)) {\n      throw new errors.InvalidPrefixError(`Invalid prefix : ${prefix}`)\n    }\n    this.policy.conditions.push(['starts-with', '$key', prefix])\n    this.formData.key = prefix\n  }\n\n  // set bucket name\n  setBucket(bucketName) {\n    if (!isValidBucketName(bucketName)) {\n      throw new errors.InvalidBucketNameError(`Invalid bucket name : ${bucketName}`)\n    }\n    this.policy.conditions.push(['eq', '$bucket', bucketName])\n    this.formData.bucket = bucketName\n  }\n\n  // set Content-Type\n  setContentType(type) {\n    if (!type) {\n      throw new Error('content-type cannot be null')\n    }\n    this.policy.conditions.push(['eq', '$Content-Type', type])\n    this.formData['Content-Type'] = type\n  }\n\n  // set minimum/maximum length of what Content-Length can be.\n  setContentLengthRange(min, max) {\n    if (min > max) {\n      throw new Error('min cannot be more than max')\n    }\n    if (min < 0) {\n      throw new Error('min should be > 0')\n    }\n    if (max < 0) {\n      throw new Error('max should be > 0')\n    }\n    this.policy.conditions.push(['content-length-range', min, max])\n  }\n}\n\nexport * from './notification'\n"],"file":"minio.js"}