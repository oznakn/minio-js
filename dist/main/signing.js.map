{"version":3,"sources":["signing.js"],"names":["signV4Algorithm","getCanonicalRequest","method","path","headers","signedHeaders","hashedPayload","signingHost","TypeError","headersArray","reduce","acc","i","val","replace","toLowerCase","push","requestResource","split","requestQuery","sort","map","element","indexOf","join","canonical","toUpperCase","getCredential","accessKey","region","requestDate","getSignedHeaders","ignoredHeaders","_","v","header","filter","getSigningKey","date","secretKey","dateLine","hmac1","Crypto","createHmac","update","digest","hmac2","hmac3","getStringToSign","canonicalRequest","hash","createHash","scope","stringToSign","postPresignSignatureV4","policyBase64","signingKey","signV4","request","errors","AccessKeyRequiredError","SecretKeyRequiredError","sha256sum","credential","signature","presignSignatureV4","sessionToken","expires","ExpiresParamError","iso8601Date","resource","query","presignedUrl","protocol","host"],"mappings":"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","sourcesContent":["/*\n * MinIO Javascript Library for Amazon S3 Compatible Cloud Storage, (C) 2016 MinIO, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Crypto from 'crypto'\nimport _ from 'lodash'\nimport { uriEscape, getScope, isString, isObject, isArray, isNumber,\n  makeDateShort, makeDateLong } from './helpers.js'\nimport * as errors from './errors.js'\n\nconst signV4Algorithm = 'AWS4-HMAC-SHA256'\n\n// getCanonicalRequest generate a canonical request of style.\n//\n// canonicalRequest =\n//  <HTTPMethod>\\n\n//  <CanonicalURI>\\n\n//  <CanonicalQueryString>\\n\n//  <CanonicalHeaders>\\n\n//  <SignedHeaders>\\n\n//  <HashedPayload>\n//\nfunction getCanonicalRequest(method, path, headers, signedHeaders, hashedPayload, signingHost) {\n  if (!isString(method)) {\n    throw new TypeError('method should be of type \"string\"')\n  }\n  if (!isString(path)) {\n    throw new TypeError('path should be of type \"string\"')\n  }\n  if (!isObject(headers)) {\n    throw new TypeError('headers should be of type \"object\"')\n  }\n  if (!isArray(signedHeaders)) {\n    throw new TypeError('signedHeaders should be of type \"array\"')\n  }\n  if (!isString(hashedPayload)) {\n    throw new TypeError('hashedPayload should be of type \"string\"')\n  }\n  var headersArray = signedHeaders.reduce((acc, i) => {\n    // Trim spaces from the value (required by V4 spec)\n    var val = `${headers[i]}`.replace(/ +/g, \" \")\n    if (i.toLowerCase() === 'host' && signingHost) {\n      acc.push(`${i.toLowerCase()}:${signingHost}`)\n    } else {\n      acc.push(`${i.toLowerCase()}:${val}`)\n    }\n    return acc\n  }, [])\n\n  var requestResource = path.split('?')[0]\n  var requestQuery = path.split('?')[1]\n  if (!requestQuery) requestQuery = ''\n\n  if (requestQuery) {\n    requestQuery = requestQuery\n      .split('&')\n      .sort()\n      .map(element => element.indexOf('=') === -1 ? element + '=' : element)\n      .join('&')\n  }\n\n  var canonical = []\n  canonical.push(method.toUpperCase())\n  canonical.push(requestResource)\n  canonical.push(requestQuery)\n  canonical.push(headersArray.join('\\n') + '\\n')\n  canonical.push(signedHeaders.join(';').toLowerCase())\n  canonical.push(hashedPayload)\n  return canonical.join('\\n')\n}\n\n// generate a credential string\nfunction getCredential(accessKey, region, requestDate) {\n  if (!isString(accessKey)) {\n    throw new TypeError('accessKey should be of type \"string\"')\n  }\n  if (!isString(region)) {\n    throw new TypeError('region should be of type \"string\"')\n  }\n  if (!isObject(requestDate)) {\n    throw new TypeError('requestDate should be of type \"object\"')\n  }\n  return `${accessKey}/${getScope(region, requestDate)}`\n}\n\n// Returns signed headers array - alphabetically sorted\nfunction getSignedHeaders(headers) {\n  if (!isObject(headers)) {\n    throw new TypeError('request should be of type \"object\"')\n  }\n  // Excerpts from @lsegal - https://github.com/aws/aws-sdk-js/issues/659#issuecomment-120477258\n  //\n  //  User-Agent:\n  //\n  //      This is ignored from signing because signing this causes problems with generating pre-signed URLs\n  //      (that are executed by other agents) or when customers pass requests through proxies, which may\n  //      modify the user-agent.\n  //\n  //  Content-Length:\n  //\n  //      This is ignored from signing because generating a pre-signed URL should not provide a content-length\n  //      constraint, specifically when vending a S3 pre-signed PUT URL. The corollary to this is that when\n  //      sending regular requests (non-pre-signed), the signature contains a checksum of the body, which\n  //      implicitly validates the payload length (since changing the number of bytes would change the checksum)\n  //      and therefore this header is not valuable in the signature.\n  //\n  //  Content-Type:\n  //\n  //      Signing this header causes quite a number of problems in browser environments, where browsers\n  //      like to modify and normalize the content-type header in different ways. There is more information\n  //      on this in https://github.com/aws/aws-sdk-js/issues/244. Avoiding this field simplifies logic\n  //      and reduces the possibility of future bugs\n  //\n  //  Authorization:\n  //\n  //      Is skipped for obvious reasons\n\n  var ignoredHeaders = ['authorization', 'content-length', 'content-type', 'user-agent']\n  return _.map(headers, (v, header) => header)\n    .filter(header => ignoredHeaders.indexOf(header) === -1)\n    .sort()\n}\n\n// returns the key used for calculating signature\nfunction getSigningKey(date, region, secretKey) {\n  if (!isObject(date)) {\n    throw new TypeError('date should be of type \"object\"')\n  }\n  if (!isString(region)) {\n    throw new TypeError('region should be of type \"string\"')\n  }\n  if (!isString(secretKey)) {\n    throw new TypeError('secretKey should be of type \"string\"')\n  }\n  var dateLine = makeDateShort(date),\n    hmac1 = Crypto.createHmac('sha256', 'AWS4' + secretKey).update(dateLine).digest(),\n    hmac2 = Crypto.createHmac('sha256', hmac1).update(region).digest(),\n    hmac3 = Crypto.createHmac('sha256', hmac2).update('s3').digest()\n  return Crypto.createHmac('sha256', hmac3).update('aws4_request').digest()\n}\n\n// returns the string that needs to be signed\nfunction getStringToSign(canonicalRequest, requestDate, region) {\n  if (!isString(canonicalRequest)) {\n    throw new TypeError('canonicalRequest should be of type \"string\"')\n  }\n  if (!isObject(requestDate)) {\n    throw new TypeError('requestDate should be of type \"object\"')\n  }\n  if (!isString(region)) {\n    throw new TypeError('region should be of type \"string\"')\n  }\n  var hash = Crypto.createHash('sha256').update(canonicalRequest).digest('hex')\n  var scope = getScope(region, requestDate)\n  var stringToSign = []\n  stringToSign.push(signV4Algorithm)\n  stringToSign.push(makeDateLong(requestDate))\n  stringToSign.push(scope)\n  stringToSign.push(hash)\n  return stringToSign.join('\\n')\n}\n\n// calculate the signature of the POST policy\nexport function postPresignSignatureV4(region, date, secretKey, policyBase64) {\n  if (!isString(region)) {\n    throw new TypeError('region should be of type \"string\"')\n  }\n  if (!isObject(date)) {\n    throw new TypeError('date should be of type \"object\"')\n  }\n  if (!isString(secretKey)) {\n    throw new TypeError('secretKey should be of type \"string\"')\n  }\n  if (!isString(policyBase64)) {\n    throw new TypeError('policyBase64 should be of type \"string\"')\n  }\n  var signingKey = getSigningKey(date, region, secretKey)\n  return Crypto.createHmac('sha256', signingKey).update(policyBase64).digest('hex').toLowerCase()\n}\n\n// Returns the authorization header\nexport function signV4(request, accessKey, secretKey, region, requestDate, signingHost) {\n  if (!isObject(request)) {\n    throw new TypeError('request should be of type \"object\"')\n  }\n  if (!isString(accessKey)) {\n    throw new TypeError('accessKey should be of type \"string\"')\n  }\n  if (!isString(secretKey)) {\n    throw new TypeError('secretKey should be of type \"string\"')\n  }\n  if (!isString(region)) {\n    throw new TypeError('region should be of type \"string\"')\n  }\n\n  if (!accessKey) {\n    throw new errors.AccessKeyRequiredError('accessKey is required for signing')\n  }\n  if (!secretKey) {\n    throw new errors.SecretKeyRequiredError('secretKey is required for signing')\n  }\n\n  var sha256sum = request.headers['x-amz-content-sha256']\n\n  var signedHeaders = getSignedHeaders(request.headers)\n  var canonicalRequest = getCanonicalRequest(request.method, request.path, request.headers,\n                                             signedHeaders, sha256sum, signingHost)\n  var stringToSign = getStringToSign(canonicalRequest, requestDate, region)\n  var signingKey = getSigningKey(requestDate, region, secretKey)\n  var credential = getCredential(accessKey, region, requestDate)\n  var signature = Crypto.createHmac('sha256', signingKey).update(stringToSign).digest('hex').toLowerCase()\n\n  return `${signV4Algorithm} Credential=${credential}, SignedHeaders=${signedHeaders.join(';').toLowerCase()}, Signature=${signature}`\n}\n\n// returns a presigned URL string\nexport function presignSignatureV4(request, accessKey, secretKey, sessionToken, region, requestDate, expires, signingHost) {\n  if (!isObject(request)) {\n    throw new TypeError('request should be of type \"object\"')\n  }\n  if (!isString(accessKey)) {\n    throw new TypeError('accessKey should be of type \"string\"')\n  }\n  if (!isString(secretKey)) {\n    throw new TypeError('secretKey should be of type \"string\"')\n  }\n  if (!isString(region)) {\n    throw new TypeError('region should be of type \"string\"')\n  }\n\n  if (!accessKey) {\n    throw new errors.AccessKeyRequiredError('accessKey is required for presigning')\n  }\n  if (!secretKey) {\n    throw new errors.SecretKeyRequiredError('secretKey is required for presigning')\n  }\n\n  if (!isNumber(expires)) {\n    throw new TypeError('expires should be of type \"number\"')\n  }\n  if (expires < 1) {\n    throw new errors.ExpiresParamError('expires param cannot be less than 1 seconds')\n  }\n  if (expires > 604800) {\n    throw new errors.ExpiresParamError('expires param cannot be greater than 7 days')\n  }\n\n  var iso8601Date = makeDateLong(requestDate)\n  var signedHeaders = getSignedHeaders(request.headers)\n  var credential = getCredential(accessKey, region, requestDate)\n  var hashedPayload = 'UNSIGNED-PAYLOAD'\n\n  var requestQuery = []\n  requestQuery.push(`X-Amz-Algorithm=${signV4Algorithm}`)\n  requestQuery.push(`X-Amz-Credential=${uriEscape(credential)}`)\n  requestQuery.push(`X-Amz-Date=${iso8601Date}`)\n  requestQuery.push(`X-Amz-Expires=${expires}`)\n  requestQuery.push(`X-Amz-SignedHeaders=${uriEscape(signedHeaders.join(';').toLowerCase())}`)\n  if (sessionToken) {\n    requestQuery.push(`X-Amz-Security-Token=${uriEscape(sessionToken)}`)\n  }\n\n  var resource = request.path.split('?')[0]\n  var query = request.path.split('?')[1]\n  if (query) {\n    query = query + '&' + requestQuery.join('&')\n  } else {\n    query = requestQuery.join('&')\n  }\n\n  var path = resource + '?' + query\n\n  var canonicalRequest = getCanonicalRequest(request.method, path,\n                                             request.headers, signedHeaders, hashedPayload, signingHost)\n\n  var stringToSign = getStringToSign(canonicalRequest, requestDate, region)\n  var signingKey = getSigningKey(requestDate, region, secretKey)\n  var signature = Crypto.createHmac('sha256', signingKey).update(stringToSign).digest('hex').toLowerCase()\n  var presignedUrl = request.protocol + '//' + request.headers.host + path + `&X-Amz-Signature=${signature}`\n  return presignedUrl\n}\n"],"file":"signing.js"}